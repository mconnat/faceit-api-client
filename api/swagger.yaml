openapi: 3.0.1
info:
  title: Data API
  description: '# This API provide access to FACEIT''s data'
  license:
    name: Property of FACEIT LTD
  version: "4"
servers:
- url: https://open.faceit.com/data/v4
security:
- key: []
paths:
  /championships:
    get:
      tags:
      - Championships
      summary: Retrieve all championships of a game
      description: Retrieve all championships of a game
      operationId: getChampionships
      parameters:
      - name: game
        in: query
        description: The id of the game
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: "Kind of matches to return. Can be all(default), upcoming, ongoing\
          \ or past"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - upcoming
          - ongoing
          - past
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 10
      responses:
        "200":
          description: Championships list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChampionshipsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /championships/{championship_id}:
    get:
      tags:
      - Championships
      summary: Retrieve championship details
      description: Retrieve championship details
      operationId: getChampionship
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expanded
        in: query
        description: List of entity names to expand in request
        required: false
        style: form
        explode: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - organizer
            - game
      responses:
        "200":
          description: Championship details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Championship'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /championships/{championship_id}/matches:
    get:
      tags:
      - Championships
      summary: Retrieve all matches of a championship
      description: Retrieve all matches of a championship
      operationId: getChampionshipMatches
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: "Kind of matches to return. Can be all(default), upcoming, ongoing\
          \ or past"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - upcoming
          - ongoing
          - past
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Matches list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /championships/{championship_id}/results:
    get:
      tags:
      - Championships
      summary: Retrieve all results of a championship
      description: Retrieve all results of a championship
      operationId: getChampionshipResults
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Championship results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChampionshipResultList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /championships/{championship_id}/subscriptions:
    get:
      tags:
      - Championships
      summary: Retrieve all subscriptions of a championship
      description: Retrieve all subscriptions of a championship
      operationId: getChampionshipSubscriptions
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 10
          minimum: 1
          type: integer
          default: 10
      responses:
        "200":
          description: Subscriptions list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChampionshipSubscriptionsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games:
    get:
      tags:
      - Games
      summary: Retrieve details of all games on FACEIT
      description: Retrieve details of all games on FACEIT
      operationId: getAllGames
      parameters:
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Games list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{gameId}/matchmakings:
    get:
      tags:
      - Games
      summary: Retrieve details of all matchmakings of a game on FACEIT
      description: Retrieve details of all matchmakings of a game on FACEIT
      operationId: getGameMatchmakings
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: region
        in: query
        description: The region of the matchmakings
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Matchmakings list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchmakingList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}:
    get:
      tags:
      - Games
      summary: Retrieve game details
      description: Retrieve game details
      operationId: getGame
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Game detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}/parent:
    get:
      tags:
      - Games
      summary: "Retrieve the details of the parent game, if the game is region-specific"
      description: "Retrieve the details of the parent game, if the game is region-specific"
      operationId: getParentGame
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Game detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}/queues:
    get:
      tags:
      - Games
      summary: Retrieve queues by filters on FACEIT
      description: Retrieve queues by filters on FACEIT. Available only for game developers
        and queue owners(organizers)
      operationId: getQueuesByEntityFilters
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: entity_type
        in: query
        description: The type of the entity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: entity_id
        in: query
        description: The id of the entity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 20
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Queues list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuesList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}/queues/{queue_id}:
    get:
      tags:
      - Games
      summary: Retrieve details of a queue on FACEIT
      description: Retrieve details of a queue on FACEIT. Available only for game
        or queue owners(organizers)
      operationId: getQueueById
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queue_id
        in: path
        description: The id of the queue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queue'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}/queues/{queue_id}/bans:
    get:
      tags:
      - Games
      summary: Retrieve queue bans on FACEIT
      description: Retrieve queue bans on FACEIT. Available only for game or queue
        owners(organizers)
      operationId: getQueueBans
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queue_id
        in: path
        description: The id of the queue
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Bans list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueBansList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /games/{game_id}/regions/{region_id}/queues:
    get:
      tags:
      - Games
      summary: Retrieve queues by region on FACEIT
      description: Retrieve queues by region on FACEIT. Available only for game developers
      operationId: getQueuesByRegion
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: region_id
        in: path
        description: The id of the region
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 20
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Queues list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueuesList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}:
    get:
      tags:
      - Hubs
      summary: Retrieve hub details
      description: Retrieve hub details
      operationId: getHub
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expanded
        in: query
        description: List of entity names to expand in request
        required: false
        style: form
        explode: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - organizer
            - game
      responses:
        "200":
          description: Hub details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hub'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}/matches:
    get:
      tags:
      - Hubs
      summary: Retrieve all matches of a hub
      description: Retrieve all matches of a hub
      operationId: getHubMatches
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: "Kind of matches to return. Can be all(default), upcoming, ongoing\
          \ or past"
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - upcoming
          - ongoing
          - past
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Matches list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}/members:
    get:
      tags:
      - Hubs
      summary: Retrieve all members of a hub
      description: Retrieve all members of a hub
      operationId: getHubMembers
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 50
      responses:
        "200":
          description: Members list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubMembers'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}/roles:
    get:
      tags:
      - Hubs
      summary: Retrieve all roles members can have in a hub
      description: Retrieve all roles members can have in a hub
      operationId: getHubRoles
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 50
      responses:
        "200":
          description: Roles list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}/rules:
    get:
      tags:
      - Hubs
      summary: Retrieve rules of a hub
      description: Retrieve rules of a hub
      operationId: getHubRules
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Rules details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rules'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /hubs/{hub_id}/stats:
    get:
      tags:
      - Hubs
      summary: Retrieve statistics of a hub
      description: Retrieve statistics of a hub
      operationId: getHubStats
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Hub stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubStats'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/championships/{championship_id}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve all leaderboards of a championship
      description: Retrieve all leaderboards of a championship
      operationId: getChampionshipLeaderboards
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Leaderboards list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/championships/{championship_id}/groups/{group}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve group ranking of a championship
      description: Retrieve group ranking of a championship
      operationId: getChampionshipGroupRanking
      parameters:
      - name: championship_id
        in: path
        description: The id of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: group
        in: path
        description: A group of the championship
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Championship ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRanking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/hubs/{hub_id}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve all leaderboards of a hub
      description: Retrieve all leaderboards of a hub
      operationId: getHubLeaderboards
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Leaderboards list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeaderboardsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/hubs/{hub_id}/general:
    get:
      tags:
      - Leaderboards
      summary: Retrieve all time ranking of a hub
      description: Retrieve all time ranking of a hub
      operationId: getHubRanking
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Hub ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRanking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/hubs/{hub_id}/seasons/{season}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve seasonal ranking of a hub
      description: Retrieve seasonal ranking of a hub
      operationId: getHubSeasonRanking
      parameters:
      - name: hub_id
        in: path
        description: The id of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: season
        in: path
        description: A season of the hub
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Hub ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRanking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/{leaderboard_id}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve ranking from a leaderboard id
      description: Retrieve ranking from a leaderboard id
      operationId: getLeaderboard
      parameters:
      - name: leaderboard_id
        in: path
        description: The id of the leaderboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Competition ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityRanking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leaderboards/{leaderboard_id}/players/{player_id}:
    get:
      tags:
      - Leaderboards
      summary: Retrieve a players ranking in a leaderboard
      description: Retrieve a players ranking in a leaderboard
      operationId: getPlayerRankingInLeaderboard
      parameters:
      - name: leaderboard_id
        in: path
        description: The id of the leaderboard
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Ranking of the player in the leaderboard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ranking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leagues/{league_id}:
    get:
      tags:
      - Leagues
      summary: Retrieve details of a league of a matchmaking on FACEIT
      description: Retrieve details of a league of a matchmaking on FACEIT
      operationId: getLeagueById
      parameters:
      - name: league_id
        in: path
        description: The id of the league
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: League details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/League'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leagues/{league_id}/seasons/{season_id}:
    get:
      tags:
      - Leagues
      summary: Retrieve details of a season of a league on FACEIT
      description: Retrieve details of a season of a league on FACEIT
      operationId: getLeagueSeason
      parameters:
      - name: league_id
        in: path
        description: The id of the league
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: season_id
        in: path
        description: The id of the season
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Season details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SeasonDetailed'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /leagues/{league_id}/seasons/{season_id}/players/{player_id}:
    get:
      tags:
      - Leagues
      summary: Retrieve details of a player for a given league and season on FACEIT
      description: Retrieve details of a player for a given league and season on FACEIT
      operationId: getPlayerForLeagueSeason
      parameters:
      - name: league_id
        in: path
        description: The id of the league
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: season_id
        in: path
        description: The id of the season
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Player details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerInLeague'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /matches/{match_id}:
    get:
      tags:
      - Matches
      summary: Retrieve match details
      description: Retrieve match details
      operationId: getMatch
      parameters:
      - name: match_id
        in: path
        description: The id of the match
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Match details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /matches/{match_id}/stats:
    get:
      tags:
      - Matches
      summary: Retrieve statistics of a match
      description: Retrieve statistics of a match
      operationId: getMatchStats
      parameters:
      - name: match_id
        in: path
        description: The id of the match
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Match stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchStats'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /matchmakings/{matchmaking_id}:
    get:
      tags:
      - Matchmakings
      summary: Retrieve details of a matchmaking of a game on FACEIT
      description: Retrieve details of a matchmaking of a game on FACEIT
      operationId: getMatchmaking
      parameters:
      - name: matchmaking_id
        in: path
        description: The id of the matchmaking
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Matchmaking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Matchmaking'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers:
    get:
      tags:
      - Organizers
      summary: Retrieve organizer details from name
      description: Retrieve organizer details from name
      operationId: getOrganizerByName
      parameters:
      - name: name
        in: query
        description: The name of the organizer
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Organizer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizer'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers/{organizer_id}:
    get:
      tags:
      - Organizers
      summary: Retrieve organizer details
      description: Retrieve organizer details
      operationId: getOrganizer
      parameters:
      - name: organizer_id
        in: path
        description: The id of the organizer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Organizer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizer'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers/{organizer_id}/championships:
    get:
      tags:
      - Organizers
      summary: Retrieve all championships of an organizer
      description: Retrieve all championships of an organizer
      operationId: getOrganizerChampionships
      parameters:
      - name: organizer_id
        in: path
        description: The id of the organizer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Championships list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChampionshipsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers/{organizer_id}/games:
    get:
      tags:
      - Organizers
      summary: Retrieve all games an organizer is involved with
      description: Retrieve all games an organizer is involved with
      operationId: getOrganizerGames
      parameters:
      - name: organizer_id
        in: path
        description: The id of the organizer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Games list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamesList'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers/{organizer_id}/hubs:
    get:
      tags:
      - Organizers
      summary: Retrieve all hubs of an organizer
      description: Retrieve all hubs of an organizer
      operationId: getOrganizerHubs
      parameters:
      - name: organizer_id
        in: path
        description: The id of the organizer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 50
      responses:
        "200":
          description: Hubs list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /organizers/{organizer_id}/tournaments:
    get:
      tags:
      - Organizers
      summary: Retrieve all tournaments of an organizer
      description: Retrieve all tournaments of an organizer
      operationId: getOrganizerTournaments
      parameters:
      - name: organizer_id
        in: path
        description: The id of the organizer
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: type
        in: query
        description: Kind of tournament. Can be upcoming(default) or past
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - past
          - upcoming
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Tournaments list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players:
    get:
      tags:
      - Players
      summary: Retrieve player details
      description: Retrieve player details
      operationId: getPlayerFromLookup
      parameters:
      - name: nickname
        in: query
        description: The nickname of the player on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: game_player_id
        in: query
        description: The ID of a player on game's platform
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Player details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}:
    get:
      tags:
      - Players
      summary: Retrieve player details
      description: Retrieve player details
      operationId: getPlayer
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Player details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/bans:
    get:
      tags:
      - Players
      summary: Retrieve all bans of a player
      description: Retrieve all bans of a player
      operationId: getPlayerBans
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Bans of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerBansList'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/games/{game_id}/stats:
    get:
      tags:
      - Players
      summary: Retrieve statistics of a player for a given amount of matches
      description: Retrieve statistics of a player for a given amount of matches
      operationId: getPlayerStats
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: game_id
        in: path
        description: A game on FACEIT
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 200
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      - name: from
        in: query
        description: |
          Used to filter the dataset by date (minimum). Expected value is date ("items.stats.Match Finished At") in epoch milliseconds.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      - name: to
        in: query
        description: |
          Used to filter the dataset by date (maximum). Expected value is date ("items.stats.Match Finished At") in epoch milliseconds.
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: Player stats for matches
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStatsForMatchesList'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/history:
    get:
      tags:
      - Players
      summary: Retrieve all matches of a player
      description: Retrieve all matches of a player
      operationId: getPlayerHistory
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: from
        in: query
        description: The timestamp (Unix time) as lower bound of the query. 1 month
          ago if not specified
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: to
        in: query
        description: The timestamp (Unix time) as higher bound of the query. Current
          timestamp if not specified
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Player matches list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchHistoryList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/hubs:
    get:
      tags:
      - Players
      summary: Retrieve all hubs of a player
      description: Retrieve all hubs of a player
      operationId: getPlayerHubs
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          maximum: 1000
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          default: 50
      responses:
        "200":
          description: Hubs list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HubsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/stats/{game_id}:
    get:
      tags:
      - Players
      summary: Retrieve statistics of a player
      description: Retrieve statistics of a player
      operationId: getPlayerStats
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: game_id
        in: path
        description: A game on FACEIT
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Player stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerStats'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/teams:
    get:
      tags:
      - Players
      summary: Retrieve all teams of a player
      description: Retrieve all teams of a player
      operationId: getPlayerTeams
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Teams of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /players/{player_id}/tournaments:
    get:
      tags:
      - Players
      summary: Retrieve all tournaments of a player
      description: Retrieve all tournaments of a player
      operationId: getPlayerTournaments
      parameters:
      - name: player_id
        in: path
        description: The id of the player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Tournaments list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /rankings/games/{game_id}/regions/{region}:
    get:
      tags:
      - Rankings
      summary: Retrieve global ranking of a game
      description: Retrieve global ranking of a game
      operationId: getGlobalRanking
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: region
        in: path
        description: A region of a game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: country
        in: query
        description: A country code (ISO 3166-1)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalRankingList'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /rankings/games/{game_id}/regions/{region}/players/{player_id}:
    get:
      tags:
      - Rankings
      summary: Retrieve user position in the global ranking of a game
      description: Retrieve user position in the global ranking of a game
      operationId: getPlayerRanking
      parameters:
      - name: game_id
        in: path
        description: The id of the game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: region
        in: path
        description: A region of a game
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: player_id
        in: path
        description: The id of a player
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: country
        in: query
        description: A country code (ISO 3166-1)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Ranking
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerGlobalRanking'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/championships:
    get:
      tags:
      - Search
      summary: Search for championships
      description: Search for championships
      operationId: searchChampionships
      parameters:
      - name: name
        in: query
        description: The name of a championship on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: A region of the game
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Kind of competitions to return
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - upcoming
          - ongoing
          - past
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of championship
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionsSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/clans:
    get:
      tags:
      - Search
      summary: Search for clans
      description: Search for clans
      operationId: searchClans
      parameters:
      - name: name
        in: query
        description: The name of a clan on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: A region of the game
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of hub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClansSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/hubs:
    get:
      tags:
      - Search
      summary: Search for hubs
      description: Search for hubs
      operationId: searchHubs
      parameters:
      - name: name
        in: query
        description: The name of a hub on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: A region of the game
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of hub
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionsSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/organizers:
    get:
      tags:
      - Search
      summary: Search for organizers
      description: Search for organizers
      operationId: searchOrganizers
      parameters:
      - name: name
        in: query
        description: The name of a organizer on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of organizers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizersSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/players:
    get:
      tags:
      - Search
      summary: Search for players
      description: Search for players
      operationId: searchPlayers
      parameters:
      - name: nickname
        in: query
        description: The nickname of a player on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: country
        in: query
        description: A country code (ISO 3166-1)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/teams:
    get:
      tags:
      - Search
      summary: Search for teams
      description: Search for teams
      operationId: searchTeams
      parameters:
      - name: nickname
        in: query
        description: The nickname of a team on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamsSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /search/tournaments:
    get:
      tags:
      - Search
      summary: Search for tournaments
      description: Search for tournaments
      operationId: searchTournaments
      parameters:
      - name: name
        in: query
        description: The name of a tournament on FACEIT
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: A region of the game
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: type
        in: query
        description: Kind of competitions to return
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - all
          - upcoming
          - ongoing
          - past
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: List of tournament
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitionsSearchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /teams/{team_id}:
    get:
      tags:
      - Teams
      summary: Retrieve team details
      description: Retrieve team details
      operationId: getTeam
      parameters:
      - name: team_id
        in: path
        description: The id of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /teams/{team_id}/stats/{game_id}:
    get:
      tags:
      - Teams
      summary: Retrieve statistics of a team
      description: Retrieve statistics of a team
      operationId: getTeamStats
      parameters:
      - name: team_id
        in: path
        description: The id of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: game_id
        in: path
        description: A game on FACEIT
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Team stats
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamStats'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /teams/{team_id}/tournaments:
    get:
      tags:
      - Teams
      summary: Retrieve tournaments of a team
      description: Retrieve tournaments of a team
      operationId: getTeamTournaments
      parameters:
      - name: team_id
        in: path
        description: The id of the team
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Tournaments list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /tournaments:
    get:
      tags:
      - Tournaments
      summary: Retrieve tournaments v1 (no longer used)
      description: Retrieve tournaments v1 (no longer used). Please refer to the Championships
        controller to retrieve tournaments v2
      operationId: getTournamentsList
      parameters:
      - name: game
        in: query
        description: A game on FACEIT
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: A region of the game
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Tournaments list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentsList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /tournaments/{tournament_id}:
    get:
      tags:
      - Tournaments
      summary: Retrieve tournament details
      description: Retrieve tournament details
      operationId: getTournament
      parameters:
      - name: tournament_id
        in: path
        description: The id of the tournament
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: expanded
        in: query
        description: List of entity names to expand in request
        required: false
        style: form
        explode: false
        schema:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - organizer
            - game
      responses:
        "200":
          description: Tournament details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /tournaments/{tournament_id}/brackets:
    get:
      tags:
      - Tournaments
      summary: Retrieve brackets of a tournament
      description: Retrieve brackets of a tournament
      operationId: getTournamentBrackets
      parameters:
      - name: tournament_id
        in: path
        description: The id of the tournament
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Rounds and matches list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Brackets'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /tournaments/{tournament_id}/matches:
    get:
      tags:
      - Tournaments
      summary: Retrieve all matches of a tournament
      description: Retrieve all matches of a tournament
      operationId: getTournamentMatches
      parameters:
      - name: tournament_id
        in: path
        description: The id of the tournament
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Matches list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchList'
        "400":
          description: Bad request
          content: {}
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
  /tournaments/{tournament_id}/teams:
    get:
      tags:
      - Tournaments
      summary: Retrieve all teams of a tournament
      description: Retrieve all teams of a tournament
      operationId: getTournamentTeams
      parameters:
      - name: tournament_id
        in: path
        description: The id of the tournament
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: offset
        in: query
        description: The starting item position
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: limit
        in: query
        description: The number of items to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          default: 20
      responses:
        "200":
          description: Teams list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentTeams'
        "401":
          description: Unauthorized
          content: {}
        "403":
          description: Forbidden
          content: {}
        "404":
          description: Not Found
          content: {}
        "429":
          description: Too many requests
          content: {}
        "503":
          description: Temporarily unavailable
          content: {}
        default:
          description: Generic error
          content: {}
components:
  schemas:
    AccessMode:
      title: AccessMode defines the access mode of a volume.
      type: object
      properties:
        BlockVolume:
          $ref: '#/components/schemas/TypeBlock'
        MountVolume:
          $ref: '#/components/schemas/TypeMount'
        Scope:
          $ref: '#/components/schemas/Scope'
        Sharing:
          $ref: '#/components/schemas/SharingMode'
      x-go-package: github.com/docker/docker/api/types/volume
    Address:
      type: object
      properties:
        address:
          type: string
          x-go-name: Address
        city:
          type: string
          x-go-name: City
        country:
          type: string
          x-go-name: Country
        postcode:
          type: string
          x-go-name: Postcode
      x-go-package: github.com/faceit/open-data-api/models/externals
    AlgorithmParameters:
      type: object
      properties:
        band:
          $ref: '#/components/schemas/Band'
      example:
        band:
          value: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    Assets:
      type: object
      properties:
        color:
          type: string
          x-go-name: Color
        icon:
          type: string
          x-go-name: Icon
        image:
          type: string
          x-go-name: Image
      example:
        image: image
        color: color
        icon: icon
      x-go-package: github.com/faceit/open-data-api/models/externals
    AuthenticateOKBody:
      required:
      - IdentityToken
      - Status
      type: object
      properties:
        IdentityToken:
          type: string
          description: An opaque token used to authenticate a user after a successful
            login
        Status:
          type: string
          description: The status of the authentication
      description: AuthenticateOKBody authenticate o k body
      x-go-package: github.com/docker/docker/api/types/registry
    Availability:
      title: Availability specifies the availability of the volume.
      type: string
      x-go-package: github.com/docker/docker/api/types/volume
    Band:
      type: object
      properties:
        value:
          type: integer
          format: int64
          x-go-name: Value
      example:
        value: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    BirthDate:
      type: object
      properties:
        date:
          type: integer
          format: int64
          x-go-name: Date
        month:
          type: integer
          format: int64
          x-go-name: Month
        year:
          type: integer
          format: int64
          x-go-name: Year
      x-go-package: github.com/faceit/open-data-api/models/externals
    Brackets:
      type: object
      properties:
        game:
          type: string
          x-go-name: Game
        matches:
          type: array
          items:
            $ref: '#/components/schemas/BracketsMatch'
          x-go-name: Matches
        name:
          type: string
          x-go-name: Name
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/BracketsRound'
          x-go-name: Rounds
        status:
          type: string
          x-go-name: Status
      example:
        game: game
        name: name
        matches:
        - round: 6
          teams:
            key:
              nickname: nickname
              avatar: avatar
              team_id: team_id
          match_id: match_id
          position: 0
          state: state
          results:
            score:
              key: 7
            winner: winner
          faceit_url: faceit_url
        - round: 6
          teams:
            key:
              nickname: nickname
              avatar: avatar
              team_id: team_id
          match_id: match_id
          position: 0
          state: state
          results:
            score:
              key: 7
            winner: winner
          faceit_url: faceit_url
        rounds:
        - start_time: 2
          substitution_time: 7
          best_of: 1
          round: 5
          label: label
          substitutions_allowed: true
          matches: 5
          starts_asap: true
        - start_time: 2
          substitution_time: 7
          best_of: 1
          round: 5
          label: label
          substitutions_allowed: true
          matches: 5
          starts_asap: true
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    BracketsFaction:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        nickname:
          type: string
          x-go-name: Nickname
        team_id:
          type: string
          x-go-name: ID
      example:
        nickname: nickname
        avatar: avatar
        team_id: team_id
      x-go-package: github.com/faceit/open-data-api/models/externals
    BracketsMatch:
      type: object
      properties:
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        match_id:
          type: string
          x-go-name: ID
        position:
          type: integer
          format: int64
          x-go-name: Position
        results:
          $ref: '#/components/schemas/MatchResult'
        round:
          type: integer
          format: int64
          x-go-name: Round
        state:
          type: string
          x-go-name: State
        teams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BracketsFaction'
          x-go-name: Teams
      example:
        round: 6
        teams:
          key:
            nickname: nickname
            avatar: avatar
            team_id: team_id
        match_id: match_id
        position: 0
        state: state
        results:
          score:
            key: 7
          winner: winner
        faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    BracketsRound:
      type: object
      properties:
        best_of:
          type: integer
          format: int64
          x-go-name: BestOf
        label:
          type: string
          x-go-name: Label
        matches:
          type: integer
          format: int64
          x-go-name: Matches
        round:
          type: integer
          format: int64
          x-go-name: Round
        start_time:
          type: integer
          format: int64
          x-go-name: StartTime
        starts_asap:
          type: boolean
          x-go-name: StartsAsap
        substitution_time:
          type: integer
          format: int64
          x-go-name: SubstitutionTime
        substitutions_allowed:
          type: boolean
          x-go-name: SubstitutionsAllowed
      example:
        start_time: 2
        substitution_time: 7
        best_of: 1
        round: 5
        label: label
        substitutions_allowed: true
        matches: 5
        starts_asap: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    CapacityRange:
      type: object
      properties:
        LimitBytes:
          type: integer
          description: |-
            LimitBytes specifies that a volume must not be bigger than this. The
            value of 0 indicates an unspecified maximum
          format: int64
        RequiredBytes:
          type: integer
          description: |-
            RequiredBytes specifies that a volume must be at least this big. The
            value of 0 indicates an unspecified minimum.
          format: int64
      description: |-
        CapacityRange describes the minimum and maximum capacity a volume should be
        created with
      x-go-package: github.com/docker/docker/api/types/volume
    Championship:
      type: object
      properties:
        anticheat_required:
          type: boolean
          x-go-name: AnticheatRequired
        avatar:
          type: string
          x-go-name: Avatar
        background_image:
          type: string
          x-go-name: BackgroundImage
        championship_id:
          type: string
          x-go-name: ID
        championship_start:
          type: integer
          format: int64
          x-go-name: ChampionshipStart
        checkin_clear:
          type: integer
          format: int64
          x-go-name: CheckinClear
        checkin_enabled:
          type: boolean
          x-go-name: CheckinEnabled
        checkin_start:
          type: integer
          format: int64
          x-go-name: CheckinStart
        cover_image:
          type: string
          x-go-name: CoverImage
        current_subscriptions:
          type: integer
          format: int64
          x-go-name: CurrentSubscriptions
        description:
          type: string
          x-go-name: Description
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        featured:
          type: boolean
          x-go-name: Featured
        full:
          type: boolean
          x-go-name: Full
        game_data:
          $ref: '#/components/schemas/Game'
        game_id:
          type: string
          x-go-name: GameID
        id:
          type: string
          description: "Deprecated: use championship_id instead"
          x-go-name: IDdep
        join_checks:
          $ref: '#/components/schemas/JoinCheck'
        name:
          type: string
          x-go-name: Name
        organizer_data:
          $ref: '#/components/schemas/Organizer'
        organizer_id:
          type: string
          x-go-name: OrganizerID
        prizes:
          type: array
          items:
            $ref: '#/components/schemas/Prize'
          x-go-name: Prizes
        region:
          type: string
          x-go-name: Region
        rules_id:
          type: string
          x-go-name: RulesID
        schedule:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ChampionshipSchedule'
          x-go-name: Schedule
        screening:
          $ref: '#/components/schemas/ChampionshipScreening'
        seeding_strategy:
          type: string
          x-go-name: SeedingStrategy
        slots:
          type: integer
          format: int64
          x-go-name: Slots
        status:
          type: string
          x-go-name: Status
        stream:
          $ref: '#/components/schemas/ChampionshipStream'
        subscription_end:
          type: integer
          format: int64
          x-go-name: SubscriptionEnd
        subscription_start:
          type: integer
          format: int64
          x-go-name: SubscriptionStart
        subscriptions_locked:
          type: boolean
          x-go-name: SubscriptionsLocked
        substitution_configuration:
          $ref: '#/components/schemas/SubstitutionConfiguration'
        total_groups:
          type: integer
          format: int64
          x-go-name: TotalGroups
        total_prizes:
          type: integer
          format: int64
          x-go-name: TotalPrizes
        total_rounds:
          type: integer
          format: int64
          x-go-name: TotalRounds
        type:
          type: string
          x-go-name: Type
      example:
        featured: true
        screening:
          id: id
          enabled: true
        join_checks:
          max_skill_level: 7
          min_skill_level: 9
          whitelist_geo_countries:
          - whitelist_geo_countries
          - whitelist_geo_countries
          whitelist_geo_countries_min_players: 3
          allowed_team_types:
          - allowed_team_types
          - allowed_team_types
          blacklist_geo_countries:
          - blacklist_geo_countries
          - blacklist_geo_countries
          join_policy: join_policy
          membership_type: membership_type
        seeding_strategy: seeding_strategy
        description: description
        type: type
        championship_id: championship_id
        checkin_start: 5
        stream:
          active: true
          source: source
          title: title
          platform: platform
        organizer_id: organizer_id
        cover_image: cover_image
        id: id
        game_id: game_id
        substitution_configuration:
          max_substitutes: 7
          max_substitutions: 1
        total_prizes: 5
        organizer_data:
          youtube: youtube
          website: website
          twitch: twitch
          facebook: facebook
          description: description
          avatar: avatar
          type: type
          faceit_url: faceit_url
          cover: cover
          twitter: twitter
          vk: vk
          followers_count: 2
          organizer_id: organizer_id
          name: name
        current_subscriptions: 5
        total_groups: 4
        checkin_clear: 1
        subscriptions_locked: true
        total_rounds: 9
        avatar: avatar
        subscription_start: 6
        rules_id: rules_id
        faceit_url: faceit_url
        background_image: background_image
        schedule:
          key:
            date: 1
            status: status
        game_data:
          short_label: short_label
          assets:
            cover: cover
            featured_img_s: featured_img_s
            flag_img_l: flag_img_l
            flag_img_m: flag_img_m
            featured_img_m: featured_img_m
            featured_img_l: featured_img_l
            flag_img_s: flag_img_s
            flag_img_icon: flag_img_icon
            landing_page: landing_page
          regions:
          - regions
          - regions
          long_label: long_label
          parent_game_id: parent_game_id
          game_id: game_id
          order: 2
          platforms:
          - platforms
          - platforms
        slots: 1
        prizes:
        - rank: 7
          faceit_points: 4
        - rank: 7
          faceit_points: 4
        name: name
        checkin_enabled: true
        anticheat_required: true
        region: region
        championship_start: 6
        subscription_end: 1
        full: true
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipBounds:
      type: object
      properties:
        left:
          type: integer
          format: int64
          x-go-name: Left
        right:
          type: integer
          format: int64
          x-go-name: Right
      example:
        left: 6
        right: 1
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipPlacement:
      type: object
      properties:
        id:
          type: string
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        type:
          type: string
          x-go-name: Type
      example:
        name: name
        id: id
        type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipPlacementGroup:
      type: object
      properties:
        bounds:
          $ref: '#/components/schemas/ChampionshipBounds'
        placements:
          type: array
          items:
            $ref: '#/components/schemas/ChampionshipPlacement'
          x-go-name: Placements
      example:
        bounds:
          left: 6
          right: 1
        placements:
        - name: name
          id: id
          type: type
        - name: name
          id: id
          type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipResultList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChampionshipPlacementGroup'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 5
        end: 0
        items:
        - bounds:
            left: 6
            right: 1
          placements:
          - name: name
            id: id
            type: type
          - name: name
            id: id
            type: type
        - bounds:
            left: 6
            right: 1
          placements:
          - name: name
            id: id
            type: type
          - name: name
            id: id
            type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipSchedule:
      type: object
      properties:
        date:
          type: integer
          format: int64
          x-go-name: Date
        status:
          type: string
          x-go-name: Status
      example:
        date: 1
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipScreening:
      type: object
      properties:
        enabled:
          type: boolean
          x-go-name: Enabled
        id:
          type: string
          x-go-name: Id
      example:
        id: id
        enabled: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipStream:
      type: object
      properties:
        active:
          type: boolean
          x-go-name: Active
        platform:
          type: string
          x-go-name: Platform
        source:
          type: string
          x-go-name: Source
        title:
          type: string
          x-go-name: Title
      example:
        active: true
        source: source
        title: title
        platform: platform
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipSubscription:
      type: object
      properties:
        coach:
          type: string
          x-go-name: Coach
        coleader:
          type: string
          x-go-name: Coleader
        group:
          type: integer
          format: int64
          x-go-name: Group
        leader:
          type: string
          x-go-name: Leader
        roster:
          type: array
          items:
            type: string
          x-go-name: Roster
        status:
          type: string
          x-go-name: Status
        substitutes:
          type: array
          items:
            type: string
          x-go-name: Substitutes
        team:
          $ref: '#/components/schemas/Team'
      example:
        leader: leader
        roster:
        - roster
        - roster
        coleader: coleader
        substitutes:
        - substitutes
        - substitutes
        team:
          youtube: https://youtube.com/team
          leader: leader
          game: csgo
          website: https://team.website
          facebook: https://facebook/team
          description: Some description
          avatar: https://avatar.jpg
          team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
          twitter: https://twitter/team
          members:
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
          name: name
          nickname: nickname
          team_type: premade
          cover_image: https://cover-image.jpg
        coach: coach
        group: 6
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipSubscriptionsList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/ChampionshipSubscription'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        items:
        - leader: leader
          roster:
          - roster
          - roster
          coleader: coleader
          substitutes:
          - substitutes
          - substitutes
          team:
            youtube: https://youtube.com/team
            leader: leader
            game: csgo
            website: https://team.website
            facebook: https://facebook/team
            description: Some description
            avatar: https://avatar.jpg
            team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
            twitter: https://twitter/team
            members:
            - country: GB
              user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
              nickname: nickname
              skill_level: 1
              avatar: https://avatar.jpg
              membership_type: membership_type
              memberships:
              - free
              - unlimited
              faceit_url: faceit_url
            - country: GB
              user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
              nickname: nickname
              skill_level: 1
              avatar: https://avatar.jpg
              membership_type: membership_type
              memberships:
              - free
              - unlimited
              faceit_url: faceit_url
            chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
            name: name
            nickname: nickname
            team_type: premade
            cover_image: https://cover-image.jpg
          coach: coach
          group: 6
          status: status
        - leader: leader
          roster:
          - roster
          - roster
          coleader: coleader
          substitutes:
          - substitutes
          - substitutes
          team:
            youtube: https://youtube.com/team
            leader: leader
            game: csgo
            website: https://team.website
            facebook: https://facebook/team
            description: Some description
            avatar: https://avatar.jpg
            team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
            twitter: https://twitter/team
            members:
            - country: GB
              user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
              nickname: nickname
              skill_level: 1
              avatar: https://avatar.jpg
              membership_type: membership_type
              memberships:
              - free
              - unlimited
              faceit_url: faceit_url
            - country: GB
              user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
              nickname: nickname
              skill_level: 1
              avatar: https://avatar.jpg
              membership_type: membership_type
              memberships:
              - free
              - unlimited
              faceit_url: faceit_url
            chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
            name: name
            nickname: nickname
            team_type: premade
            cover_image: https://cover-image.jpg
          coach: coach
          group: 6
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChampionshipsList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Championship'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 9
        end: 0
        items:
        - featured: true
          screening:
            id: id
            enabled: true
          join_checks:
            max_skill_level: 7
            min_skill_level: 9
            whitelist_geo_countries:
            - whitelist_geo_countries
            - whitelist_geo_countries
            whitelist_geo_countries_min_players: 3
            allowed_team_types:
            - allowed_team_types
            - allowed_team_types
            blacklist_geo_countries:
            - blacklist_geo_countries
            - blacklist_geo_countries
            join_policy: join_policy
            membership_type: membership_type
          seeding_strategy: seeding_strategy
          description: description
          type: type
          championship_id: championship_id
          checkin_start: 5
          stream:
            active: true
            source: source
            title: title
            platform: platform
          organizer_id: organizer_id
          cover_image: cover_image
          id: id
          game_id: game_id
          substitution_configuration:
            max_substitutes: 7
            max_substitutions: 1
          total_prizes: 5
          organizer_data:
            youtube: youtube
            website: website
            twitch: twitch
            facebook: facebook
            description: description
            avatar: avatar
            type: type
            faceit_url: faceit_url
            cover: cover
            twitter: twitter
            vk: vk
            followers_count: 2
            organizer_id: organizer_id
            name: name
          current_subscriptions: 5
          total_groups: 4
          checkin_clear: 1
          subscriptions_locked: true
          total_rounds: 9
          avatar: avatar
          subscription_start: 6
          rules_id: rules_id
          faceit_url: faceit_url
          background_image: background_image
          schedule:
            key:
              date: 1
              status: status
          game_data:
            short_label: short_label
            assets:
              cover: cover
              featured_img_s: featured_img_s
              flag_img_l: flag_img_l
              flag_img_m: flag_img_m
              featured_img_m: featured_img_m
              featured_img_l: featured_img_l
              flag_img_s: flag_img_s
              flag_img_icon: flag_img_icon
              landing_page: landing_page
            regions:
            - regions
            - regions
            long_label: long_label
            parent_game_id: parent_game_id
            game_id: game_id
            order: 2
            platforms:
            - platforms
            - platforms
          slots: 1
          prizes:
          - rank: 7
            faceit_points: 4
          - rank: 7
            faceit_points: 4
          name: name
          checkin_enabled: true
          anticheat_required: true
          region: region
          championship_start: 6
          subscription_end: 1
          full: true
          status: status
        - featured: true
          screening:
            id: id
            enabled: true
          join_checks:
            max_skill_level: 7
            min_skill_level: 9
            whitelist_geo_countries:
            - whitelist_geo_countries
            - whitelist_geo_countries
            whitelist_geo_countries_min_players: 3
            allowed_team_types:
            - allowed_team_types
            - allowed_team_types
            blacklist_geo_countries:
            - blacklist_geo_countries
            - blacklist_geo_countries
            join_policy: join_policy
            membership_type: membership_type
          seeding_strategy: seeding_strategy
          description: description
          type: type
          championship_id: championship_id
          checkin_start: 5
          stream:
            active: true
            source: source
            title: title
            platform: platform
          organizer_id: organizer_id
          cover_image: cover_image
          id: id
          game_id: game_id
          substitution_configuration:
            max_substitutes: 7
            max_substitutions: 1
          total_prizes: 5
          organizer_data:
            youtube: youtube
            website: website
            twitch: twitch
            facebook: facebook
            description: description
            avatar: avatar
            type: type
            faceit_url: faceit_url
            cover: cover
            twitter: twitter
            vk: vk
            followers_count: 2
            organizer_id: organizer_id
            name: name
          current_subscriptions: 5
          total_groups: 4
          checkin_clear: 1
          subscriptions_locked: true
          total_rounds: 9
          avatar: avatar
          subscription_start: 6
          rules_id: rules_id
          faceit_url: faceit_url
          background_image: background_image
          schedule:
            key:
              date: 1
              status: status
          game_data:
            short_label: short_label
            assets:
              cover: cover
              featured_img_s: featured_img_s
              flag_img_l: flag_img_l
              flag_img_m: flag_img_m
              featured_img_m: featured_img_m
              featured_img_l: featured_img_l
              flag_img_s: flag_img_s
              flag_img_icon: flag_img_icon
              landing_page: landing_page
            regions:
            - regions
            - regions
            long_label: long_label
            parent_game_id: parent_game_id
            game_id: game_id
            order: 2
            platforms:
            - platforms
            - platforms
          slots: 1
          prizes:
          - rank: 7
            faceit_points: 4
          - rank: 7
            faceit_points: 4
          name: name
          checkin_enabled: true
          anticheat_required: true
          region: region
          championship_start: 6
          subscription_end: 1
          full: true
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ChangeType:
      title: ChangeType Kind of change
      type: integer
      description: |-
        Can be one of:

        `0`: Modified ("C")
        `1`: Added ("A")
        `2`: Deleted ("D")
      format: uint8
      x-go-package: github.com/docker/docker/api/types/container
    CheckIn:
      type: object
      properties:
        time:
          type: integer
          format: int64
          x-go-name: Time
      example:
        time: 0
      x-go-package: github.com/faceit/open-data-api/models/externals
    ClanSearch:
      type: object
      properties:
        avatar:
          type: string
          description: The clan's avatar url
          example: https://faceit.com/images/example-clan-avatar.jpeg
          x-go-name: Avatar
        game:
          type: string
          description: The game of the clan
          example: csgo
          x-go-name: Game
        id:
          type: string
          description: The id of the clan
          example: 22479709-2064-4688-80fa-f02e97412345
          x-go-name: Id
        join:
          type: string
          description: The clan's join type
          example: invite
          x-go-name: Join
        last_match_finished:
          type: string
          description: The time the clan's last match finished
          format: date-time
          x-go-name: LastMatchFinished
        matches_count_24h:
          type: integer
          description: The clan's matches count in the last 24 hours
          format: int64
          example: 3
          x-go-name: MatchesCount24H
        max_skill_level:
          type: integer
          description: The clan's maximum skill level
          format: int64
          example: 10
          x-go-name: MaxSkillLevel
        members_count:
          type: integer
          description: The clan's members count
          format: int64
          example: 72300
          x-go-name: MembersCount
        members_count_24h:
          type: integer
          description: The clan's members count in the last 24 hours
          format: int64
          example: 1
          x-go-name: MembersCount24H
        min_skill_level:
          type: integer
          description: The clan's minimum skill level
          format: int64
          example: 1
          x-go-name: MinSkillLevel
        name:
          type: string
          description: The name of the clan
          example: Example Clan
          x-go-name: Name
        organizer_id:
          type: string
          description: The clan's organizer id
          example: f80900c9-88ef-43b4-aa97-d61ea3712345
          x-go-name: OrganizerId
        region:
          type: string
          description: The region of the clan
          example: eu
          x-go-name: Region
        type:
          type: string
          description: The type of the clan
          example: community
          x-go-name: Type
      example:
        game: csgo
        matches_count_24h: 3
        members_count_24h: 1
        last_match_finished: 2000-01-23T04:56:07.000+00:00
        avatar: https://faceit.com/images/example-clan-avatar.jpeg
        type: community
        max_skill_level: 10
        min_skill_level: 1
        organizer_id: f80900c9-88ef-43b4-aa97-d61ea3712345
        name: Example Clan
        members_count: 72300
        id: 22479709-2064-4688-80fa-f02e97412345
        join: invite
        region: eu
      x-go-package: github.com/faceit/open-data-api/models/externals
    ClansSearchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/ClanSearch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - game: csgo
          matches_count_24h: 3
          members_count_24h: 1
          last_match_finished: 2000-01-23T04:56:07.000+00:00
          avatar: https://faceit.com/images/example-clan-avatar.jpeg
          type: community
          max_skill_level: 10
          min_skill_level: 1
          organizer_id: f80900c9-88ef-43b4-aa97-d61ea3712345
          name: Example Clan
          members_count: 72300
          id: 22479709-2064-4688-80fa-f02e97412345
          join: invite
          region: eu
        - game: csgo
          matches_count_24h: 3
          members_count_24h: 1
          last_match_finished: 2000-01-23T04:56:07.000+00:00
          avatar: https://faceit.com/images/example-clan-avatar.jpeg
          type: community
          max_skill_level: 10
          min_skill_level: 1
          organizer_id: f80900c9-88ef-43b4-aa97-d61ea3712345
          name: Example Clan
          members_count: 72300
          id: 22479709-2064-4688-80fa-f02e97412345
          join: invite
          region: eu
      x-go-package: github.com/faceit/open-data-api/models/externals
    ClusterVolume:
      type: object
      properties:
        CreatedAt:
          type: string
          format: date-time
        ID:
          type: string
          description: |-
            ID is the Swarm ID of the volume. Because cluster volumes are Swarm
            objects, they have an ID, unlike non-cluster volumes, which only have a
            Name. This ID can be used to refer to the cluster volume.
        Info:
          $ref: '#/components/schemas/Info'
        PublishStatus:
          type: array
          description: |-
            PublishStatus contains the status of the volume as it pertains to its
            publishing on Nodes.
          items:
            $ref: '#/components/schemas/PublishStatus'
        Spec:
          $ref: '#/components/schemas/ClusterVolumeSpec'
        UpdatedAt:
          type: string
          format: date-time
        Version:
          $ref: '#/components/schemas/Version'
      description: |-
        ClusterVolume contains options and information specific to, and only present
        on, Swarm CSI cluster volumes.
      x-go-package: github.com/docker/docker/api/types/volume
    ClusterVolumeSpec:
      title: ClusterVolumeSpec contains the spec used to create this volume.
      type: object
      properties:
        AccessMode:
          $ref: '#/components/schemas/AccessMode'
        AccessibilityRequirements:
          $ref: '#/components/schemas/TopologyRequirement'
        Availability:
          $ref: '#/components/schemas/Availability'
        CapacityRange:
          $ref: '#/components/schemas/CapacityRange'
        Group:
          type: string
          description: |-
            Group defines the volume group of this volume. Volumes belonging to the
            same group can be referred to by group name when creating Services.
            Referring to a volume by group instructs swarm to treat volumes in that
            group interchangeably for the purpose of scheduling. Volumes with an
            empty string for a group technically all belong to the same, emptystring
            group.
        Secrets:
          type: array
          description: |-
            Secrets defines Swarm Secrets that are passed to the CSI storage plugin
            when operating on this volume.
          items:
            $ref: '#/components/schemas/Secret'
      x-go-package: github.com/docker/docker/api/types/volume
    CompetitionSearch:
      type: object
      properties:
        competition_id:
          type: string
          x-go-name: ID
        competition_type:
          type: string
          x-go-name: Type
        game:
          type: string
          x-go-name: Game
        name:
          type: string
          x-go-name: Name
        number_of_members:
          type: integer
          format: int64
          x-go-name: NumberOfMembers
        organizer_id:
          type: string
          x-go-name: OrganizerID
        organizer_name:
          type: string
          x-go-name: OrganizerName
        organizer_type:
          type: string
          x-go-name: OrganizerType
        players_checkedin:
          type: integer
          format: int64
          x-go-name: PlayersCheckedIn
        players_joined:
          type: integer
          format: int64
          x-go-name: PlayersJoined
        prize_type:
          type: string
          description: Tournaments
          x-go-name: PrizeType
        region:
          type: string
          x-go-name: Region
        slots:
          type: integer
          description: Hubs
          format: int64
          x-go-name: Slots
        started_at:
          type: integer
          format: int64
          x-go-name: StartedAt
        status:
          type: string
          x-go-name: Status
        total_prize:
          type: string
          x-go-name: TotalPrize
      example:
        competition_type: competition_type
        game: game
        number_of_members: 6
        players_joined: 5
        organizer_type: organizer_type
        slots: 5
        competition_id: competition_id
        organizer_id: organizer_id
        name: name
        players_checkedin: 1
        started_at: 2
        organizer_name: organizer_name
        region: region
        total_prize: total_prize
        prize_type: prize_type
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    CompetitionsSearchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/CompetitionSearch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 7
        end: 0
        items:
        - competition_type: competition_type
          game: game
          number_of_members: 6
          players_joined: 5
          organizer_type: organizer_type
          slots: 5
          competition_id: competition_id
          organizer_id: organizer_id
          name: name
          players_checkedin: 1
          started_at: 2
          organizer_name: organizer_name
          region: region
          total_prize: total_prize
          prize_type: prize_type
          status: status
        - competition_type: competition_type
          game: game
          number_of_members: 6
          players_joined: 5
          organizer_type: organizer_type
          slots: 5
          competition_id: competition_id
          organizer_id: organizer_id
          name: name
          players_checkedin: 1
          started_at: 2
          organizer_name: organizer_name
          region: region
          total_prize: total_prize
          prize_type: prize_type
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    ContainerTopOKBody:
      required:
      - Processes
      - Titles
      type: object
      properties:
        Processes:
          type: array
          description: |-
            Each process running in the container, where each is process
            is an array of values corresponding to the titles.
          items:
            type: array
            items:
              type: string
        Titles:
          type: array
          description: The ps column titles
          items:
            type: string
      description: ContainerTopOKBody OK response to ContainerTop operation
      x-go-package: github.com/docker/docker/api/types/container
    ContainerUpdateOKBody:
      required:
      - Warnings
      type: object
      properties:
        Warnings:
          type: array
          description: warnings
          items:
            type: string
      description: ContainerUpdateOKBody OK response to ContainerUpdate operation
      x-go-package: github.com/docker/docker/api/types/container
    CreateOptions:
      title: CreateOptions VolumeConfig
      type: object
      properties:
        ClusterVolumeSpec:
          $ref: '#/components/schemas/ClusterVolumeSpec'
        Driver:
          type: string
          description: Name of the volume driver to use.
        DriverOpts:
          type: object
          additionalProperties:
            type: string
          description: |-
            A mapping of driver options and values. These options are
            passed directly to the driver and are driver specific.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Name:
          type: string
          description: "The new volume's name. If not specified, Docker generates\
            \ a name."
      description: Volume configuration
      x-go-package: github.com/docker/docker/api/types/volume
    CreateResponse:
      title: CreateResponse ContainerCreateResponse
      required:
      - Id
      - Warnings
      type: object
      properties:
        Id:
          type: string
          description: The ID of the created container
          x-go-name: ID
        Warnings:
          type: array
          description: Warnings encountered when creating the container
          items:
            type: string
      description: OK response to ContainerCreate operation
      x-go-package: github.com/docker/docker/api/types/container
    DeleteResponse:
      type: object
      properties:
        Deleted:
          type: string
          description: The image ID of an image that was deleted
        Untagged:
          type: string
          description: The image ID of an image that was untagged
      description: DeleteResponse delete response
      x-go-package: github.com/docker/docker/api/types/image
    DetailedMatchResult:
      title: DetailedMatchResult Model
      type: object
      properties:
        asc_score:
          type: boolean
          description: True if the scores should be interpreted ascending (lower score
            wins)
          example: true
          x-go-name: AscScore
        factions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FactionResult'
          description: The factions of the match
          x-go-name: Factions
        winner:
          type: string
          description: The winner faction
          x-go-name: Winner
      description: '# DetailedMatchResult holds detailed match results'
      example:
        winner: winner
        asc_score: true
        factions:
          key:
            score: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    Division:
      type: object
      properties:
        assets:
          $ref: '#/components/schemas/Assets'
        config_type:
          type: string
          description: "The type of the division. Can be nested or classic. Nested\
            \ means that the division has tiers, classic is without tiers."
          x-go-name: ConfigType
        leaderboard_config:
          $ref: '#/components/schemas/LeaderboardConfig'
        leaderboards:
          type: array
          description: The leaderboards of the division
          items:
            type: string
          x-go-name: Leaderboards
        max_elo:
          type: integer
          description: Max ELO for a user to be placed in this division after placement
            matches
          format: int64
          x-go-name: MaxElo
        min_elo:
          type: integer
          description: Min ELO for a user to be placed in this division after placement
            matches
          format: int64
          x-go-name: MinElo
        name:
          type: string
          description: The name of the division.
          x-go-name: Name
        tiers:
          type: array
          description: The tiers of the division
          items:
            $ref: '#/components/schemas/Tier'
          x-go-name: Tiers
        type:
          type: string
          description: The type of the division.
          x-go-name: Type
      example:
        tiers:
        - points_target: 5
          name: name
          rank: 1
        - points_target: 5
          name: name
          rank: 1
        assets:
          image: image
          color: color
          icon: icon
        leaderboard_config:
          relegation:
            consecutive_losses: 3
          max_players: 0
          points_per_win: 10
          starting_points: 6
          points_per_loss: -2
          promotion:
            points: 10
        min_elo: 5
        max_elo: 1
        name: name
        leaderboards:
        - leaderboards
        - leaderboards
        config_type: config_type
        type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    EntityRanking:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Ranking'
          x-go-name: Items
        leaderboard:
          $ref: '#/components/schemas/Leaderboard'
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        leaderboard:
          end_date: 6
          leaderboard_id: leaderboard_id
          competition_type: competition_type
          leaderboard_type: leaderboard_type
          points_per_draw: 5
          ranking_type: ranking_type
          points_per_win: 7
          points_type: points_type
          starting_points: 7
          points_per_loss: 2
          leaderboard_mode: leaderboard_mode
          min_matches: 5
          ranking_boost: 9
          round: 3
          competition_id: competition_id
          leaderboard_name: leaderboard_name
          season: 2
          region: region
          game_id: game_id
          group: 1
          start_date: 4
          status: status
        start: 2
        end: 0
        items:
        - lost: 5
          won: 3
          draw: 1
          position: 7
          win_rate: 9.301444243932576
          current_streak: 6
          played: 5
          player:
            country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          points: 2
        - lost: 5
          won: 3
          draw: 1
          position: 7
          win_rate: 9.301444243932576
          current_streak: 6
          played: 5
          player:
            country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          points: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    ErrorResponse:
      title: ErrorResponse Represents an error.
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: The error message.
          x-go-name: Message
      x-go-package: github.com/docker/docker/api/types
    Faction:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        faction_id:
          type: string
          x-go-name: ID
        leader:
          type: string
          x-go-name: Leader
        name:
          type: string
          x-go-name: Name
        roster:
          type: array
          items:
            $ref: '#/components/schemas/Roster'
          x-go-name: Roster
        roster_v1:
          type: object
          x-go-name: RosterV1
        stats:
          $ref: '#/components/schemas/Stats'
        substituted:
          type: boolean
          x-go-name: Substituted
        type:
          type: string
          x-go-name: Type
      example:
        roster_v1: {}
        leader: leader
        roster:
        - player_id: player_id
          game_player_id: game_player_id
          game_skill_level: 4
          nickname: nickname
          anticheat_required: true
          avatar: avatar
          membership: membership
          game_player_name: game_player_name
        - player_id: player_id
          game_player_id: game_player_id
          game_skill_level: 4
          nickname: nickname
          anticheat_required: true
          avatar: avatar
          membership: membership
          game_player_name: game_player_name
        stats:
          winProbability: 6.84685269835264
          rating: 7
          skillLevel:
            average: 1
            range:
              min: 1
              max: 1
        substituted: true
        name: name
        faction_id: faction_id
        avatar: avatar
        type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    FactionResult:
      title: FactionResult Model
      type: object
      properties:
        score:
          type: integer
          description: The score of the faction.
          format: int64
          example: 2
          x-go-name: Score
      description: '# FactionResult holds detailed faction score'
      example:
        score: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    FilesystemChange:
      title: FilesystemChange Change in the container's filesystem.
      required:
      - Kind
      - Path
      type: object
      properties:
        Kind:
          $ref: '#/components/schemas/ChangeType'
        Path:
          type: string
          description: Path to file or directory that has changed.
      x-go-package: github.com/docker/docker/api/types/container
    Game:
      type: object
      properties:
        assets:
          $ref: '#/components/schemas/Game_assets'
        game_id:
          type: string
          x-go-name: ID
        long_label:
          type: string
          x-go-name: LongLabel
        order:
          type: integer
          format: int64
          x-go-name: Order
        parent_game_id:
          type: string
          x-go-name: ParentGameID
        platforms:
          type: array
          items:
            type: string
          x-go-name: Platforms
        regions:
          type: array
          items:
            type: string
          x-go-name: Regions
        short_label:
          type: string
          x-go-name: ShortLabel
      example:
        short_label: short_label
        assets:
          cover: cover
          featured_img_s: featured_img_s
          flag_img_l: flag_img_l
          flag_img_m: flag_img_m
          featured_img_m: featured_img_m
          featured_img_l: featured_img_l
          flag_img_s: flag_img_s
          flag_img_icon: flag_img_icon
          landing_page: landing_page
        regions:
        - regions
        - regions
        long_label: long_label
        parent_game_id: parent_game_id
        game_id: game_id
        order: 2
        platforms:
        - platforms
        - platforms
      x-go-package: github.com/faceit/open-data-api/models/externals
    GameDetail:
      type: object
      properties:
        faceit_elo:
          type: integer
          format: int64
          x-go-name: FaceitElo
        game_player_id:
          type: string
          x-go-name: GamePlayerID
        game_player_name:
          type: string
          x-go-name: GamePlayerName
        game_profile_id:
          type: string
          description: "Deprecated: no more in use"
          x-go-name: GameProfileID
        region:
          type: string
          x-go-name: Region
        regions:
          type: object
          description: "Deprecated: no more in use"
          x-go-name: Regions
        skill_level:
          type: integer
          format: int64
          x-go-name: SkillLevel
        skill_level_label:
          type: string
          description: "Deprecated: use SkillLevel instead"
          x-go-name: SkillLevelLabel
      example:
        regions: {}
        faceit_elo: 0
        skill_level_label: skill_level_label
        game_player_id: game_player_id
        game_profile_id: game_profile_id
        skill_level: 6
        region: region
        game_player_name: game_player_name
      x-go-package: github.com/faceit/open-data-api/models/externals
    GameUserSearch:
      type: object
      properties:
        name:
          type: string
          x-go-name: Name
        skill_level:
          type: string
          x-go-name: SkillLevel
      description: |-
        Here we return SkillLevel as string even if it is an int
        as we don't want to break the contract with devs
      example:
        name: name
        skill_level: skill_level
      x-go-package: github.com/faceit/open-data-api/models/externals
    GamesList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Game'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - short_label: short_label
          assets:
            cover: cover
            featured_img_s: featured_img_s
            flag_img_l: flag_img_l
            flag_img_m: flag_img_m
            featured_img_m: featured_img_m
            featured_img_l: featured_img_l
            flag_img_s: flag_img_s
            flag_img_icon: flag_img_icon
            landing_page: landing_page
          regions:
          - regions
          - regions
          long_label: long_label
          parent_game_id: parent_game_id
          game_id: game_id
          order: 2
          platforms:
          - platforms
          - platforms
        - short_label: short_label
          assets:
            cover: cover
            featured_img_s: featured_img_s
            flag_img_l: flag_img_l
            flag_img_m: flag_img_m
            featured_img_m: featured_img_m
            featured_img_l: featured_img_l
            flag_img_s: flag_img_s
            flag_img_icon: flag_img_icon
            landing_page: landing_page
          regions:
          - regions
          - regions
          long_label: long_label
          parent_game_id: parent_game_id
          game_id: game_id
          order: 2
          platforms:
          - platforms
          - platforms
      x-go-package: github.com/faceit/open-data-api/models/externals
    GeoDescription:
      type: object
      properties:
        en:
          type: string
          x-go-name: En
        fr:
          type: string
          x-go-name: Fr
      example:
        en: en
        fr: fr
      x-go-package: github.com/faceit/open-data-api/models/externals
    GeoLabel:
      type: object
      properties:
        en:
          type: string
          x-go-name: En
        fr:
          type: string
          x-go-name: Fr
      example:
        en: en
        fr: fr
      x-go-package: github.com/faceit/open-data-api/models/externals
    GlobalRanking:
      type: object
      properties:
        country:
          type: string
          x-go-name: Country
        faceit_elo:
          type: integer
          format: int64
          x-go-name: FaceitElo
        game_skill_level:
          type: integer
          format: int64
          x-go-name: SkillLevel
        nickname:
          type: string
          x-go-name: Nickname
        player_id:
          type: string
          x-go-name: ID
        position:
          type: integer
          format: int64
          x-go-name: Position
      example:
        country: country
        player_id: player_id
        faceit_elo: 6
        game_skill_level: 1
        nickname: nickname
        position: 5
      x-go-package: github.com/faceit/open-data-api/models/externals
    GlobalRankingList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/GlobalRanking'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 5
        end: 0
        items:
        - country: country
          player_id: player_id
          faceit_elo: 6
          game_skill_level: 1
          nickname: nickname
          position: 5
        - country: country
          player_id: player_id
          faceit_elo: 6
          game_skill_level: 1
          nickname: nickname
          position: 5
      x-go-package: github.com/faceit/open-data-api/models/externals
    GraphDriverData:
      required:
      - Data
      - Name
      type: object
      properties:
        Data:
          type: object
          additionalProperties:
            type: string
          description: |-
            Low-level storage metadata, provided as key/value pairs.

            This information is driver-specific, and depends on the storage-driver
            in use, and should be used for informational purposes only.
        Name:
          type: string
          description: Name of the storage driver.
      description: |-
        GraphDriverData Information about the storage driver used to store the container's and
        image's filesystem.
      x-go-package: github.com/docker/docker/api/types
    HistoryFaction:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        nickname:
          type: string
          x-go-name: Nickname
        players:
          type: array
          items:
            $ref: '#/components/schemas/MatchHistoryPlayer'
          x-go-name: Players
        team_id:
          type: string
          x-go-name: ID
        type:
          type: string
          x-go-name: Type
      example:
        players:
        - player_id: player_id
          game_player_id: game_player_id
          nickname: nickname
          skill_level: 2
          avatar: avatar
          game_player_name: game_player_name
          faceit_url: faceit_url
        - player_id: player_id
          game_player_id: game_player_id
          nickname: nickname
          skill_level: 2
          avatar: avatar
          game_player_name: game_player_name
          faceit_url: faceit_url
        nickname: nickname
        avatar: avatar
        team_id: team_id
        type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    HistoryResponseItem:
      required:
      - Comment
      - Created
      - CreatedBy
      - Id
      - Size
      - Tags
      type: object
      properties:
        Comment:
          type: string
          description: comment
        Created:
          type: integer
          description: created
          format: int64
        CreatedBy:
          type: string
          description: created by
        Id:
          type: string
          description: Id
          x-go-name: ID
        Size:
          type: integer
          description: size
          format: int64
        Tags:
          type: array
          description: tags
          items:
            type: string
      description: HistoryResponseItem individual image layer information in response
        to ImageHistory operation
      x-go-package: github.com/docker/docker/api/types/image
    Hub:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        background_image:
          type: string
          x-go-name: BackgroundImage
        chat_room_id:
          type: string
          x-go-name: ChatID
        cover_image:
          type: string
          x-go-name: CoverImage
        description:
          type: string
          x-go-name: Description
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        game_data:
          $ref: '#/components/schemas/Game'
        game_id:
          type: string
          x-go-name: GameID
        hub_id:
          type: string
          x-go-name: ID
        join_permission:
          type: string
          x-go-name: JoinPermission
        max_skill_level:
          type: integer
          format: int64
          x-go-name: MaxSkillLevel
        min_skill_level:
          type: integer
          format: int64
          x-go-name: MinSkillLevel
        name:
          type: string
          x-go-name: Name
        organizer_data:
          $ref: '#/components/schemas/Organizer'
        organizer_id:
          type: string
          x-go-name: OrganizerID
        players_joined:
          type: integer
          format: int64
          x-go-name: PlayersJoined
        region:
          type: string
          x-go-name: Region
        rule_id:
          type: string
          x-go-name: RuleID
      example:
        organizer_data:
          youtube: youtube
          website: website
          twitch: twitch
          facebook: facebook
          description: description
          avatar: avatar
          type: type
          faceit_url: faceit_url
          cover: cover
          twitter: twitter
          vk: vk
          followers_count: 2
          organizer_id: organizer_id
          name: name
        players_joined: 1
        description: description
        avatar: avatar
        faceit_url: faceit_url
        background_image: background_image
        max_skill_level: 0
        rule_id: rule_id
        game_data:
          short_label: short_label
          assets:
            cover: cover
            featured_img_s: featured_img_s
            flag_img_l: flag_img_l
            flag_img_m: flag_img_m
            featured_img_m: featured_img_m
            featured_img_l: featured_img_l
            flag_img_s: flag_img_s
            flag_img_icon: flag_img_icon
            landing_page: landing_page
          regions:
          - regions
          - regions
          long_label: long_label
          parent_game_id: parent_game_id
          game_id: game_id
          order: 2
          platforms:
          - platforms
          - platforms
        min_skill_level: 6
        hub_id: hub_id
        organizer_id: organizer_id
        chat_room_id: chat_room_id
        name: name
        cover_image: cover_image
        region: region
        game_id: game_id
        join_permission: join_permission
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubMembers:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/HubUser'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - user_id: user_id
          roles:
          - roles
          - roles
          nickname: nickname
          avatar: avatar
          faceit_url: faceit_url
        - user_id: user_id
          roles:
          - roles
          - roles
          nickname: nickname
          avatar: avatar
          faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubSmall:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        game_id:
          type: string
          x-go-name: GameID
        hub_id:
          type: string
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        organizer_id:
          type: string
          x-go-name: OrganizerID
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubStats:
      type: object
      properties:
        game_id:
          type: string
          x-go-name: GameID
        players:
          type: array
          items:
            $ref: '#/components/schemas/StatsCompetitionPlayer'
          x-go-name: Players
      example:
        players:
        - player_id: player_id
          stats:
            key: {}
          nickname: nickname
        - player_id: player_id
          stats:
            key: {}
          nickname: nickname
        game_id: game_id
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubUser:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        nickname:
          type: string
          x-go-name: Nickname
        roles:
          type: array
          items:
            type: string
          x-go-name: Roles
        user_id:
          type: string
          x-go-name: ID
      example:
        user_id: user_id
        roles:
        - roles
        - roles
        nickname: nickname
        avatar: avatar
        faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubsList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Hub'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - organizer_data:
            youtube: youtube
            website: website
            twitch: twitch
            facebook: facebook
            description: description
            avatar: avatar
            type: type
            faceit_url: faceit_url
            cover: cover
            twitter: twitter
            vk: vk
            followers_count: 2
            organizer_id: organizer_id
            name: name
          players_joined: 1
          description: description
          avatar: avatar
          faceit_url: faceit_url
          background_image: background_image
          max_skill_level: 0
          rule_id: rule_id
          game_data:
            short_label: short_label
            assets:
              cover: cover
              featured_img_s: featured_img_s
              flag_img_l: flag_img_l
              flag_img_m: flag_img_m
              featured_img_m: featured_img_m
              featured_img_l: featured_img_l
              flag_img_s: flag_img_s
              flag_img_icon: flag_img_icon
              landing_page: landing_page
            regions:
            - regions
            - regions
            long_label: long_label
            parent_game_id: parent_game_id
            game_id: game_id
            order: 2
            platforms:
            - platforms
            - platforms
          min_skill_level: 6
          hub_id: hub_id
          organizer_id: organizer_id
          chat_room_id: chat_room_id
          name: name
          cover_image: cover_image
          region: region
          game_id: game_id
          join_permission: join_permission
        - organizer_data:
            youtube: youtube
            website: website
            twitch: twitch
            facebook: facebook
            description: description
            avatar: avatar
            type: type
            faceit_url: faceit_url
            cover: cover
            twitter: twitter
            vk: vk
            followers_count: 2
            organizer_id: organizer_id
            name: name
          players_joined: 1
          description: description
          avatar: avatar
          faceit_url: faceit_url
          background_image: background_image
          max_skill_level: 0
          rule_id: rule_id
          game_data:
            short_label: short_label
            assets:
              cover: cover
              featured_img_s: featured_img_s
              flag_img_l: flag_img_l
              flag_img_m: flag_img_m
              featured_img_m: featured_img_m
              featured_img_l: featured_img_l
              flag_img_s: flag_img_s
              flag_img_icon: flag_img_icon
              landing_page: landing_page
            regions:
            - regions
            - regions
            long_label: long_label
            parent_game_id: parent_game_id
            game_id: game_id
            order: 2
            platforms:
            - platforms
            - platforms
          min_skill_level: 6
          hub_id: hub_id
          organizer_id: organizer_id
          chat_room_id: chat_room_id
          name: name
          cover_image: cover_image
          region: region
          game_id: game_id
          join_permission: join_permission
      x-go-package: github.com/faceit/open-data-api/models/externals
    HubsSmallList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/HubSmall'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      x-go-package: github.com/faceit/open-data-api/models/externals
    IdResponse:
      required:
      - Id
      type: object
      properties:
        Id:
          type: string
          description: The id of the newly created object.
          x-go-name: ID
      description: IDResponse Response to an API call that returns just an Id
      x-go-name: IDResponse
      x-go-package: github.com/docker/docker/api/types
    Info:
      type: object
      properties:
        AccessibleTopology:
          type: array
          description: |-
            AccessibleTopolgoy is the topology this volume is actually accessible
            from.
          items:
            $ref: '#/components/schemas/Topology'
        CapacityBytes:
          type: integer
          description: |-
            CapacityBytes is the capacity of the volume in bytes. A value of 0
            indicates that the capacity is unknown.
          format: int64
        VolumeContext:
          type: object
          additionalProperties:
            type: string
          description: |-
            VolumeContext is the context originating from the CSI storage plugin
            when the Volume is created.
        VolumeID:
          type: string
          description: |-
            VolumeID is the ID of the Volume as seen by the CSI storage plugin. This
            is distinct from the Volume's Swarm ID, which is the ID used by all of
            the Docker Engine to refer to the Volume. If this field is blank, then
            the Volume has not been successfully created yet.
      description: |-
        Info contains information about the Volume as a whole as provided by
        the CSI storage plugin.
      x-go-package: github.com/docker/docker/api/types/volume
    Item:
      type: object
      properties:
        category:
          type: string
          x-go-name: Category
        country_blacklist:
          type: array
          items:
            type: string
          x-go-name: CountryBlacklist
        country_whitelist:
          type: array
          items:
            type: string
          x-go-name: CountryWhitelist
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        created_by:
          type: string
          x-go-name: CreatedBy
        external_id:
          type: string
          description: ExternalId refers to the ID of the item in a third-party shop
          x-go-name: ExternalId
        games:
          type: array
          items:
            type: string
          x-go-name: Games
        id:
          type: string
          x-go-name: Id
        media:
          $ref: '#/components/schemas/ItemMedia'
        name:
          type: string
          x-go-name: Name
        new:
          type: boolean
          x-go-name: New
        order_type:
          type: string
          x-go-name: OrderType
        platforms:
          type: array
          items:
            type: string
          x-go-name: Platforms
        price:
          type: number
          format: float
          x-go-name: Price
        published:
          type: boolean
          x-go-name: Published
        quantity:
          type: integer
          format: int64
          x-go-name: Quantity
        sizes:
          type: array
          items:
            type: string
          x-go-name: Sizes
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        unlimited:
          type: boolean
          x-go-name: Unlimited
        url:
          type: string
          x-go-name: Url
      x-go-package: github.com/faceit/open-data-api/models/externals
    ItemList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      x-go-package: github.com/faceit/open-data-api/models/externals
    ItemMedia:
      type: object
      properties:
        avatar_full:
          type: string
          x-go-name: AvatarFull
        avatar_medium:
          type: string
          x-go-name: AvatarMedium
        avatar_small:
          type: string
          x-go-name: AvatarSmall
      x-go-package: github.com/faceit/open-data-api/models/externals
    JoinCheck:
      type: object
      properties:
        allowed_team_types:
          type: array
          items:
            type: string
          x-go-name: AllowedTeamTypes
        blacklist_geo_countries:
          type: array
          items:
            type: string
          x-go-name: BlackListGeoCountries
        join_policy:
          type: string
          x-go-name: JoinPolicy
        max_skill_level:
          type: integer
          format: int64
          x-go-name: MaxSkillLevel
        membership_type:
          type: string
          x-go-name: MembershipType
        min_skill_level:
          type: integer
          format: int64
          x-go-name: MinSkillLevel
        whitelist_geo_countries:
          type: array
          items:
            type: string
          x-go-name: WhitelistGeoCountries
        whitelist_geo_countries_min_players:
          type: integer
          format: int64
          x-go-name: WhitelistGeoCountriesMinPlayers
      example:
        max_skill_level: 7
        min_skill_level: 9
        whitelist_geo_countries:
        - whitelist_geo_countries
        - whitelist_geo_countries
        whitelist_geo_countries_min_players: 3
        allowed_team_types:
        - allowed_team_types
        - allowed_team_types
        blacklist_geo_countries:
        - blacklist_geo_countries
        - blacklist_geo_countries
        join_policy: join_policy
        membership_type: membership_type
      x-go-package: github.com/faceit/open-data-api/models/externals
    JoinType:
      type: object
      properties:
        maxParty:
          type: integer
          format: int64
          x-go-name: MaxParty
        party:
          type: boolean
          x-go-name: Party
        premade:
          type: boolean
          x-go-name: Premade
        solo:
          type: boolean
          x-go-name: Solo
      example:
        maxParty: 6
        solo: true
        premade: true
        party: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    Leaderboard:
      type: object
      properties:
        competition_id:
          type: string
          x-go-name: CompetitionID
        competition_type:
          type: string
          x-go-name: CompetitionType
        end_date:
          type: integer
          format: int64
          x-go-name: EndDate
        game_id:
          type: string
          x-go-name: GameID
        group:
          type: integer
          format: int64
          x-go-name: Group
        leaderboard_id:
          type: string
          x-go-name: ID
        leaderboard_mode:
          type: string
          x-go-name: LeaderboardMode
        leaderboard_name:
          type: string
          x-go-name: LeaderboardName
        leaderboard_type:
          type: string
          x-go-name: LeaderboardType
        min_matches:
          type: integer
          format: int64
          x-go-name: MinMatches
        points_per_draw:
          type: integer
          format: int64
          x-go-name: PointsPerDraw
        points_per_loss:
          type: integer
          format: int64
          x-go-name: PointsPerLoss
        points_per_win:
          type: integer
          format: int64
          x-go-name: PointsPerWin
        points_type:
          type: string
          x-go-name: PointsType
        ranking_boost:
          type: integer
          format: int64
          x-go-name: RankingBoost
        ranking_type:
          type: string
          x-go-name: RankingType
        region:
          type: string
          x-go-name: Region
        round:
          type: integer
          format: int64
          x-go-name: Round
        season:
          type: integer
          format: int64
          x-go-name: Season
        start_date:
          type: integer
          format: int64
          x-go-name: StartDate
        starting_points:
          type: integer
          format: int64
          x-go-name: StartingPoints
        status:
          type: string
          x-go-name: Status
      example:
        end_date: 6
        leaderboard_id: leaderboard_id
        competition_type: competition_type
        leaderboard_type: leaderboard_type
        points_per_draw: 5
        ranking_type: ranking_type
        points_per_win: 7
        points_type: points_type
        starting_points: 7
        points_per_loss: 2
        leaderboard_mode: leaderboard_mode
        min_matches: 5
        ranking_boost: 9
        round: 3
        competition_id: competition_id
        leaderboard_name: leaderboard_name
        season: 2
        region: region
        game_id: game_id
        group: 1
        start_date: 4
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    LeaderboardConfig:
      type: object
      properties:
        max_players:
          type: integer
          description: Max players in the leaderboard.
          format: int64
          x-go-name: MaxPlayers
        points_per_loss:
          type: integer
          description: User will lose this amount of points if they lose a match
          format: int64
          example: -2
          x-go-name: PointsPerLoss
        points_per_win:
          type: integer
          description: "User will gain this amount of points if they win a match.\
            \ When not configured, it's using the global value which is 3"
          format: int64
          example: 10
          x-go-name: PointsPerWin
        promotion:
          $ref: '#/components/schemas/Promotion'
        relegation:
          $ref: '#/components/schemas/Relegation'
        starting_points:
          type: integer
          description: Starting points for a player.
          format: int64
          x-go-name: StartingPoints
      example:
        relegation:
          consecutive_losses: 3
        max_players: 0
        points_per_win: 10
        starting_points: 6
        points_per_loss: -2
        promotion:
          points: 10
      x-go-package: github.com/faceit/open-data-api/models/externals
    LeaderboardsList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Leaderboard'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        items:
        - end_date: 6
          leaderboard_id: leaderboard_id
          competition_type: competition_type
          leaderboard_type: leaderboard_type
          points_per_draw: 5
          ranking_type: ranking_type
          points_per_win: 7
          points_type: points_type
          starting_points: 7
          points_per_loss: 2
          leaderboard_mode: leaderboard_mode
          min_matches: 5
          ranking_boost: 9
          round: 3
          competition_id: competition_id
          leaderboard_name: leaderboard_name
          season: 2
          region: region
          game_id: game_id
          group: 1
          start_date: 4
          status: status
        - end_date: 6
          leaderboard_id: leaderboard_id
          competition_type: competition_type
          leaderboard_type: leaderboard_type
          points_per_draw: 5
          ranking_type: ranking_type
          points_per_win: 7
          points_type: points_type
          starting_points: 7
          points_per_loss: 2
          leaderboard_mode: leaderboard_mode
          min_matches: 5
          ranking_boost: 9
          round: 3
          competition_id: competition_id
          leaderboard_name: leaderboard_name
          season: 2
          region: region
          game_id: game_id
          group: 1
          start_date: 4
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    League:
      title: League Model
      type: object
      properties:
        divisions:
          type: array
          description: The divisions of the league.
          items:
            $ref: '#/components/schemas/Division'
          x-go-name: Divisions
        game:
          type: string
          description: The game of the league.
          x-go-name: Game
        id:
          type: string
          description: The id of the league.
          x-go-name: Id
        min_matches:
          type: integer
          description: The minimum matches of the league.
          format: int64
          x-go-name: MinMatches
        region:
          type: string
          description: The region of the league.
          x-go-name: Region
        season:
          $ref: '#/components/schemas/Season'
      description: The League holds league information.
      example:
        game: game
        min_matches: 2
        season:
          end_date: 2000-01-23T04:56:07.000+00:00
          number: 7
          placement_match_count: 9
          start_date: 2000-01-23T04:56:07.000+00:00
        id: id
        region: region
        divisions:
        - tiers:
          - points_target: 5
            name: name
            rank: 1
          - points_target: 5
            name: name
            rank: 1
          assets:
            image: image
            color: color
            icon: icon
          leaderboard_config:
            relegation:
              consecutive_losses: 3
            max_players: 0
            points_per_win: 10
            starting_points: 6
            points_per_loss: -2
            promotion:
              points: 10
          min_elo: 5
          max_elo: 1
          name: name
          leaderboards:
          - leaderboards
          - leaderboards
          config_type: config_type
          type: type
        - tiers:
          - points_target: 5
            name: name
            rank: 1
          - points_target: 5
            name: name
            rank: 1
          assets:
            image: image
            color: color
            icon: icon
          leaderboard_config:
            relegation:
              consecutive_losses: 3
            max_players: 0
            points_per_win: 10
            starting_points: 6
            points_per_loss: -2
            promotion:
              points: 10
          min_elo: 5
          max_elo: 1
          name: name
          leaderboards:
          - leaderboards
          - leaderboards
          config_type: config_type
          type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    ListResponse:
      title: ListResponse VolumeListResponse
      type: object
      properties:
        Volumes:
          type: array
          description: List of volumes
          items:
            $ref: '#/components/schemas/Volume'
        Warnings:
          type: array
          description: Warnings that occurred when fetching the list of volumes.
          items:
            type: string
      description: Volume list response
      x-go-package: github.com/docker/docker/api/types/volume
    Match:
      type: object
      properties:
        best_of:
          type: integer
          format: int64
          x-go-name: BestOf
        broadcast_start_time:
          type: integer
          format: int64
          x-go-name: BroadcastStartTime
        broadcast_start_time_label:
          type: string
          x-go-name: BroadcastStartTimeLabel
        calculate_elo:
          type: boolean
          x-go-name: CalculateElo
        chat_room_id:
          type: string
          x-go-name: ChatID
        competition_id:
          type: string
          x-go-name: CompetitionID
        competition_name:
          type: string
          x-go-name: CompetitionName
        competition_type:
          type: string
          x-go-name: CompetitionType
        configured_at:
          type: integer
          format: int64
          x-go-name: ConfiguredAt
        demo_url:
          type: array
          items:
            type: string
          x-go-name: DemoURL
        detailed_results:
          type: array
          items:
            $ref: '#/components/schemas/DetailedMatchResult'
          x-go-name: DetailedResults
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        finished_at:
          type: integer
          format: int64
          x-go-name: FinishedAt
        game:
          type: string
          x-go-name: Game
        group:
          type: integer
          format: int64
          x-go-name: Group
        match_id:
          type: string
          x-go-name: ID
        organizer_id:
          type: string
          x-go-name: OrganizerID
        region:
          type: string
          x-go-name: Region
        results:
          $ref: '#/components/schemas/MatchResult'
        round:
          type: integer
          format: int64
          x-go-name: Round
        scheduled_at:
          type: integer
          format: int64
          x-go-name: ScheduledAt
        started_at:
          type: integer
          format: int64
          x-go-name: StartedAt
        status:
          type: string
          x-go-name: Status
        teams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Faction'
          x-go-name: Teams
        version:
          type: integer
          format: int64
          x-go-name: Version
        voting:
          type: object
          x-go-name: Voting
      example:
        competition_type: competition_type
        calculate_elo: true
        game: game
        finished_at: 5
        demo_url:
        - demo_url
        - demo_url
        scheduled_at: 3
        voting: {}
        broadcast_start_time: 1
        best_of: 6
        organizer_id: organizer_id
        chat_room_id: chat_room_id
        results:
          score:
            key: 7
          winner: winner
        detailed_results:
        - winner: winner
          asc_score: true
          factions:
            key:
              score: 2
        - winner: winner
          asc_score: true
          factions:
            key:
              score: 2
        group: 2
        teams:
          key:
            roster_v1: {}
            leader: leader
            roster:
            - player_id: player_id
              game_player_id: game_player_id
              game_skill_level: 4
              nickname: nickname
              anticheat_required: true
              avatar: avatar
              membership: membership
              game_player_name: game_player_name
            - player_id: player_id
              game_player_id: game_player_id
              game_skill_level: 4
              nickname: nickname
              anticheat_required: true
              avatar: avatar
              membership: membership
              game_player_name: game_player_name
            stats:
              winProbability: 6.84685269835264
              rating: 7
              skillLevel:
                average: 1
                range:
                  min: 1
                  max: 1
            substituted: true
            name: name
            faction_id: faction_id
            avatar: avatar
            type: type
        match_id: match_id
        version: 7
        faceit_url: faceit_url
        configured_at: 5
        broadcast_start_time_label: broadcast_start_time_label
        competition_name: competition_name
        round: 9
        competition_id: competition_id
        started_at: 2
        region: region
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchHistory:
      type: object
      properties:
        competition_id:
          type: string
          x-go-name: CompetitionID
        competition_name:
          type: string
          x-go-name: CompetitionName
        competition_type:
          type: string
          x-go-name: CompetitionType
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        finished_at:
          type: integer
          format: int64
          x-go-name: FinishedAt
        game_id:
          type: string
          x-go-name: GameID
        game_mode:
          type: string
          x-go-name: GameMode
        match_id:
          type: string
          x-go-name: ID
        match_type:
          type: string
          x-go-name: MatchType
        max_players:
          type: integer
          format: int64
          x-go-name: MaxPlayers
        organizer_id:
          type: string
          x-go-name: OrganizerID
        playing_players:
          type: array
          items:
            type: string
          x-go-name: PlayingPlayers
        region:
          type: string
          x-go-name: Region
        results:
          $ref: '#/components/schemas/MatchResult'
        started_at:
          type: integer
          format: int64
          x-go-name: StartedAt
        status:
          type: string
          x-go-name: Status
        teams:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HistoryFaction'
          x-go-name: Teams
        teams_size:
          type: integer
          format: int64
          x-go-name: TeamSize
      example:
        competition_type: competition_type
        finished_at: 1
        teams:
          key:
            players:
            - player_id: player_id
              game_player_id: game_player_id
              nickname: nickname
              skill_level: 2
              avatar: avatar
              game_player_name: game_player_name
              faceit_url: faceit_url
            - player_id: player_id
              game_player_id: game_player_id
              nickname: nickname
              skill_level: 2
              avatar: avatar
              game_player_name: game_player_name
              faceit_url: faceit_url
            nickname: nickname
            avatar: avatar
            team_id: team_id
            type: type
        teams_size: 7
        match_id: match_id
        faceit_url: faceit_url
        competition_name: competition_name
        playing_players:
        - playing_players
        - playing_players
        competition_id: competition_id
        organizer_id: organizer_id
        game_mode: game_mode
        match_type: match_type
        started_at: 5
        max_players: 5
        region: region
        results:
          score:
            key: 7
          winner: winner
        game_id: game_id
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchHistoryList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        from:
          type: integer
          format: int64
          x-go-name: From
        items:
          type: array
          items:
            $ref: '#/components/schemas/MatchHistory'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
        to:
          type: integer
          format: int64
          x-go-name: To
      example:
        start: 9
        end: 0
        from: 6
        to: 3
        items:
        - competition_type: competition_type
          finished_at: 1
          teams:
            key:
              players:
              - player_id: player_id
                game_player_id: game_player_id
                nickname: nickname
                skill_level: 2
                avatar: avatar
                game_player_name: game_player_name
                faceit_url: faceit_url
              - player_id: player_id
                game_player_id: game_player_id
                nickname: nickname
                skill_level: 2
                avatar: avatar
                game_player_name: game_player_name
                faceit_url: faceit_url
              nickname: nickname
              avatar: avatar
              team_id: team_id
              type: type
          teams_size: 7
          match_id: match_id
          faceit_url: faceit_url
          competition_name: competition_name
          playing_players:
          - playing_players
          - playing_players
          competition_id: competition_id
          organizer_id: organizer_id
          game_mode: game_mode
          match_type: match_type
          started_at: 5
          max_players: 5
          region: region
          results:
            score:
              key: 7
            winner: winner
          game_id: game_id
          status: status
        - competition_type: competition_type
          finished_at: 1
          teams:
            key:
              players:
              - player_id: player_id
                game_player_id: game_player_id
                nickname: nickname
                skill_level: 2
                avatar: avatar
                game_player_name: game_player_name
                faceit_url: faceit_url
              - player_id: player_id
                game_player_id: game_player_id
                nickname: nickname
                skill_level: 2
                avatar: avatar
                game_player_name: game_player_name
                faceit_url: faceit_url
              nickname: nickname
              avatar: avatar
              team_id: team_id
              type: type
          teams_size: 7
          match_id: match_id
          faceit_url: faceit_url
          competition_name: competition_name
          playing_players:
          - playing_players
          - playing_players
          competition_id: competition_id
          organizer_id: organizer_id
          game_mode: game_mode
          match_type: match_type
          started_at: 5
          max_players: 5
          region: region
          results:
            score:
              key: 7
            winner: winner
          game_id: game_id
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchHistoryPlayer:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        game_player_id:
          type: string
          x-go-name: GamePlayerID
        game_player_name:
          type: string
          x-go-name: GamePlayerName
        nickname:
          type: string
          x-go-name: Nickname
        player_id:
          type: string
          x-go-name: ID
        skill_level:
          type: integer
          format: int64
          x-go-name: SkillLevel
      example:
        player_id: player_id
        game_player_id: game_player_id
        nickname: nickname
        skill_level: 2
        avatar: avatar
        game_player_name: game_player_name
        faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Match'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        items:
        - competition_type: competition_type
          calculate_elo: true
          game: game
          finished_at: 5
          demo_url:
          - demo_url
          - demo_url
          scheduled_at: 3
          voting: {}
          broadcast_start_time: 1
          best_of: 6
          organizer_id: organizer_id
          chat_room_id: chat_room_id
          results:
            score:
              key: 7
            winner: winner
          detailed_results:
          - winner: winner
            asc_score: true
            factions:
              key:
                score: 2
          - winner: winner
            asc_score: true
            factions:
              key:
                score: 2
          group: 2
          teams:
            key:
              roster_v1: {}
              leader: leader
              roster:
              - player_id: player_id
                game_player_id: game_player_id
                game_skill_level: 4
                nickname: nickname
                anticheat_required: true
                avatar: avatar
                membership: membership
                game_player_name: game_player_name
              - player_id: player_id
                game_player_id: game_player_id
                game_skill_level: 4
                nickname: nickname
                anticheat_required: true
                avatar: avatar
                membership: membership
                game_player_name: game_player_name
              stats:
                winProbability: 6.84685269835264
                rating: 7
                skillLevel:
                  average: 1
                  range:
                    min: 1
                    max: 1
              substituted: true
              name: name
              faction_id: faction_id
              avatar: avatar
              type: type
          match_id: match_id
          version: 7
          faceit_url: faceit_url
          configured_at: 5
          broadcast_start_time_label: broadcast_start_time_label
          competition_name: competition_name
          round: 9
          competition_id: competition_id
          started_at: 2
          region: region
          status: status
        - competition_type: competition_type
          calculate_elo: true
          game: game
          finished_at: 5
          demo_url:
          - demo_url
          - demo_url
          scheduled_at: 3
          voting: {}
          broadcast_start_time: 1
          best_of: 6
          organizer_id: organizer_id
          chat_room_id: chat_room_id
          results:
            score:
              key: 7
            winner: winner
          detailed_results:
          - winner: winner
            asc_score: true
            factions:
              key:
                score: 2
          - winner: winner
            asc_score: true
            factions:
              key:
                score: 2
          group: 2
          teams:
            key:
              roster_v1: {}
              leader: leader
              roster:
              - player_id: player_id
                game_player_id: game_player_id
                game_skill_level: 4
                nickname: nickname
                anticheat_required: true
                avatar: avatar
                membership: membership
                game_player_name: game_player_name
              - player_id: player_id
                game_player_id: game_player_id
                game_skill_level: 4
                nickname: nickname
                anticheat_required: true
                avatar: avatar
                membership: membership
                game_player_name: game_player_name
              stats:
                winProbability: 6.84685269835264
                rating: 7
                skillLevel:
                  average: 1
                  range:
                    min: 1
                    max: 1
              substituted: true
              name: name
              faction_id: faction_id
              avatar: avatar
              type: type
          match_id: match_id
          version: 7
          faceit_url: faceit_url
          configured_at: 5
          broadcast_start_time_label: broadcast_start_time_label
          competition_name: competition_name
          round: 9
          competition_id: competition_id
          started_at: 2
          region: region
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchResult:
      type: object
      properties:
        score:
          type: object
          additionalProperties:
            type: integer
            format: int64
          x-go-name: Score
        winner:
          type: string
          x-go-name: Winner
      example:
        score:
          key: 7
        winner: winner
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchStats:
      type: object
      properties:
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/RoundStats'
          x-go-name: Rounds
      example:
        rounds:
        - round_stats:
            key: {}
          best_of: {}
          teams:
          - players:
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            team_stats:
              key: {}
            team_id: {}
            premade: {}
          - players:
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            team_stats:
              key: {}
            team_id: {}
            premade: {}
          competition_id: {}
          match_id: {}
          game_mode: {}
          match_round: {}
          played: {}
          game_id: {}
        - round_stats:
            key: {}
          best_of: {}
          teams:
          - players:
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            team_stats:
              key: {}
            team_id: {}
            premade: {}
          - players:
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            - player_id: {}
              player_stats:
                key: {}
              nickname: {}
            team_stats:
              key: {}
            team_id: {}
            premade: {}
          competition_id: {}
          match_id: {}
          game_mode: {}
          match_round: {}
          played: {}
          game_id: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    Matchmaking:
      type: object
      properties:
        game:
          type: string
          x-go-name: Game
        icon:
          type: string
          x-go-name: Icon
        id:
          type: string
          x-go-name: Id
        league_id:
          type: string
          x-go-name: LeagueId
        long_description:
          type: string
          x-go-name: LongDescription
        name:
          type: string
          x-go-name: Name
        queues:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakingQueue'
          x-go-name: Queues
        region:
          type: string
          x-go-name: Region
        short_description:
          type: string
          x-go-name: ShortDescription
      description: Matchmaking A detailed representation of a matchmaking
      example:
        short_description: short_description
        game: game
        queues:
        - paused: true
          organizer_id: organizer_id
          name: name
          id: id
          open: true
        - paused: true
          organizer_id: organizer_id
          name: name
          id: id
          open: true
        icon: icon
        name: name
        id: id
        long_description: long_description
        region: region
        league_id: league_id
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchmakingList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/MatchmakingSlim'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      description: MatchmakingList A list of matchmaking objects
      example:
        start: 6
        end: 0
        items:
        - game: game
          has_league: true
          name: name
          id: id
          region: region
        - game: game
          has_league: true
          name: name
          id: id
          region: region
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchmakingQueue:
      type: object
      properties:
        id:
          type: string
          x-go-name: Id
        name:
          type: string
          x-go-name: Name
        open:
          type: boolean
          x-go-name: Open
        organizer_id:
          type: string
          x-go-name: OrganizerId
        paused:
          type: boolean
          x-go-name: Paused
      example:
        paused: true
        organizer_id: organizer_id
        name: name
        id: id
        open: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    MatchmakingSlim:
      type: object
      properties:
        game:
          type: string
          x-go-name: Game
        has_league:
          type: boolean
          x-go-name: HasLeague
        id:
          type: string
          x-go-name: Id
        name:
          type: string
          x-go-name: Name
        region:
          type: string
          x-go-name: Region
      description: MatchmakingSlim A slim representation of a matchmaking
      example:
        game: game
        has_league: true
        name: name
        id: id
        region: region
      x-go-package: github.com/faceit/open-data-api/models/externals
    Meta:
      title: Meta is a base object inherited by most of the other once.
      type: object
      properties:
        CreatedAt:
          type: string
          format: date-time
        UpdatedAt:
          type: string
          format: date-time
        Version:
          $ref: '#/components/schemas/Version'
      x-go-package: github.com/docker/docker/api/types/swarm
    Order:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          x-go-name: CreatedAt
        game:
          type: string
          x-go-name: Game
        id:
          type: string
          x-go-name: Id
        item:
          $ref: '#/components/schemas/OrderItem'
        status:
          type: string
          x-go-name: Status
        updated_at:
          type: string
          format: date-time
          x-go-name: UpdatedAt
        user:
          $ref: '#/components/schemas/OrderUser'
      x-go-package: github.com/faceit/open-data-api/models/externals
    OrderItem:
      type: object
      properties:
        external_id:
          type: string
          x-go-name: ExternalId
        image_url:
          type: string
          x-go-name: ImageUrl
        item_id:
          type: string
          x-go-name: ItemId
        name:
          type: string
          x-go-name: Name
        price:
          type: number
          format: float
          x-go-name: Price
      x-go-package: github.com/faceit/open-data-api/models/externals
    OrderList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order'
          x-go-name: Orders
        start:
          type: integer
          format: int64
          x-go-name: Start
      x-go-package: github.com/faceit/open-data-api/models/externals
    OrderUser:
      type: object
      properties:
        external_id:
          type: string
          x-go-name: ExternalId
        id:
          type: string
          x-go-name: Id
      x-go-package: github.com/faceit/open-data-api/models/externals
    Organizer:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        cover:
          type: string
          x-go-name: Cover
        description:
          type: string
          x-go-name: Description
        facebook:
          type: string
          x-go-name: Facebook
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        followers_count:
          type: integer
          format: int64
          x-go-name: FollowersCount
        name:
          type: string
          x-go-name: Name
        organizer_id:
          type: string
          x-go-name: ID
        twitch:
          type: string
          x-go-name: Twitch
        twitter:
          type: string
          x-go-name: Twitter
        type:
          type: string
          x-go-name: Type
        vk:
          type: string
          x-go-name: Vk
        website:
          type: string
          x-go-name: Website
        youtube:
          type: string
          x-go-name: Youtube
      example:
        youtube: youtube
        website: website
        twitch: twitch
        facebook: facebook
        description: description
        avatar: avatar
        type: type
        faceit_url: faceit_url
        cover: cover
        twitter: twitter
        vk: vk
        followers_count: 2
        organizer_id: organizer_id
        name: name
      x-go-package: github.com/faceit/open-data-api/models/externals
    OrganizerSearch:
      type: object
      properties:
        active:
          type: boolean
          x-go-name: Active
        avatar:
          type: string
          x-go-name: Avatar
        countries:
          type: array
          items:
            type: string
          x-go-name: Countries
        games:
          type: array
          items:
            type: string
          x-go-name: Games
        name:
          type: string
          x-go-name: Name
        organizer_id:
          type: string
          x-go-name: ID
        partner:
          type: boolean
          x-go-name: Partner
        regions:
          type: array
          items:
            type: string
          x-go-name: Regions
      example:
        regions:
        - regions
        - regions
        partner: true
        organizer_id: organizer_id
        games:
        - games
        - games
        name: name
        active: true
        avatar: avatar
        countries:
        - countries
        - countries
      x-go-package: github.com/faceit/open-data-api/models/externals
    OrganizersSearchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrganizerSearch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - regions:
          - regions
          - regions
          partner: true
          organizer_id: organizer_id
          games:
          - games
          - games
          name: name
          active: true
          avatar: avatar
          countries:
          - countries
          - countries
        - regions:
          - regions
          - regions
          partner: true
          organizer_id: organizer_id
          games:
          - games
          - games
          name: name
          active: true
          avatar: avatar
          countries:
          - countries
          - countries
      x-go-package: github.com/faceit/open-data-api/models/externals
    PaginationFields:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        start:
          type: integer
          format: int64
          x-go-name: Start
      x-go-package: github.com/faceit/open-data-api/models/externals
    Placement:
      type: object
      properties:
        division_name:
          type: string
          x-go-name: DivisionName
        division_type:
          type: string
          x-go-name: DivisionType
        ladder:
          type: string
          x-go-name: Ladder
        matchmaking_id:
          type: string
          x-go-name: MatchmakingId
        season_number:
          type: integer
          format: int64
          x-go-name: SeasonNumber
        tier_name:
          type: string
          x-go-name: TierName
        tier_rank:
          type: integer
          format: int64
          x-go-name: TierRank
      x-go-package: github.com/faceit/open-data-api/models/externals
    Player:
      type: object
      properties:
        activated_at:
          type: string
          format: date-time
          x-go-name: ActivatedAt
        avatar:
          type: string
          x-go-name: Avatar
        country:
          type: string
          x-go-name: Country
        cover_featured_image:
          type: string
          description: "Deprecated: no more in use"
          x-go-name: CoverFeaturedImage
        cover_image:
          type: string
          x-go-name: CoverImage
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        friends_ids:
          type: array
          items:
            type: string
          x-go-name: FriendsIds
        games:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GameDetail'
          x-go-name: Games
        infractions:
          type: object
          description: "Deprecated: no more in use"
          x-go-name: Infractions
        membership_type:
          type: string
          description: "Deprecated: use memberships instead"
          x-go-name: MembershipType
        memberships:
          type: array
          items:
            type: string
          x-go-name: Memberships
        new_steam_id:
          type: string
          x-go-name: NewSteamID
        nickname:
          type: string
          x-go-name: Nickname
        platforms:
          type: object
          additionalProperties:
            type: string
          x-go-name: Platforms
        player_id:
          type: string
          x-go-name: ID
        settings:
          $ref: '#/components/schemas/UserSettings'
        steam_id_64:
          type: string
          x-go-name: SteamID64
        steam_nickname:
          type: string
          x-go-name: SteamNickname
        verified:
          type: boolean
          x-go-name: Verified
      example:
        country: country
        friends_ids:
        - friends_ids
        - friends_ids
        settings:
          language: language
        steam_nickname: steam_nickname
        verified: true
        infractions: {}
        avatar: avatar
        memberships:
        - memberships
        - memberships
        faceit_url: faceit_url
        platforms:
          key: platforms
        activated_at: 2000-01-23T04:56:07.000+00:00
        cover_featured_image: cover_featured_image
        player_id: player_id
        games:
          key:
            regions: {}
            faceit_elo: 0
            skill_level_label: skill_level_label
            game_player_id: game_player_id
            game_profile_id: game_profile_id
            skill_level: 6
            region: region
            game_player_name: game_player_name
        nickname: nickname
        cover_image: cover_image
        new_steam_id: new_steam_id
        steam_id_64: steam_id_64
        membership_type: membership_type
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerBan:
      type: object
      properties:
        ends_at:
          type: string
          format: date-time
          x-go-name: EndsAt
        game:
          type: string
          x-go-name: Game
        nickname:
          type: string
          x-go-name: Nickname
        reason:
          type: string
          x-go-name: Reason
        starts_at:
          type: string
          format: date-time
          x-go-name: StartsAt
        type:
          type: string
          x-go-name: Type
        user_id:
          type: string
          x-go-name: UserId
      example:
        reason: reason
        game: game
        starts_at: 2000-01-23T04:56:07.000+00:00
        user_id: user_id
        nickname: nickname
        ends_at: 2000-01-23T04:56:07.000+00:00
        type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerBansList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlayerBan'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - reason: reason
          game: game
          starts_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          nickname: nickname
          ends_at: 2000-01-23T04:56:07.000+00:00
          type: type
        - reason: reason
          game: game
          starts_at: 2000-01-23T04:56:07.000+00:00
          user_id: user_id
          nickname: nickname
          ends_at: 2000-01-23T04:56:07.000+00:00
          type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerGlobalRanking:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/GlobalRanking'
          x-go-name: Items
        position:
          type: integer
          format: int64
          x-go-name: Position
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        position: 6
        items:
        - country: country
          player_id: player_id
          faceit_elo: 6
          game_skill_level: 1
          nickname: nickname
          position: 5
        - country: country
          player_id: player_id
          faceit_elo: 6
          game_skill_level: 1
          nickname: nickname
          position: 5
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerInLeague:
      title: PlayerInLeague Model
      type: object
      properties:
        division_name:
          type: string
          description: The division name that the player is in.
          x-go-name: DivisionName
        division_tier:
          type: string
          description: The division tier that the player is in.
          x-go-name: DivisionTier
        division_type:
          type: string
          description: The division type that the player is in.
          x-go-name: DivisionType
        leaderboard_id:
          type: string
          description: The leaderboard id that the player is in.
          x-go-name: LeaderboardId
        points:
          type: integer
          description: The points of the player in the leaderboard.
          format: int64
          x-go-name: Points
        position:
          type: integer
          description: The position of the player in the leaderboard.
          format: int64
          x-go-name: Position
      description: PlayerInLeague holds information about a player in a league.
      example:
        leaderboard_id: leaderboard_id
        division_type: division_type
        division_name: division_name
        position: 6
        division_tier: division_tier
        points: 0
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerStats:
      type: object
      properties:
        game_id:
          type: string
          x-go-name: GameID
        lifetime:
          type: object
          additionalProperties:
            type: object
          x-go-name: Lifetime
        player_id:
          type: string
          x-go-name: PlayerID
        segments:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
          x-go-name: Segments
      example:
        player_id: player_id
        lifetime:
          key: {}
        game_id: game_id
        segments:
        - key: {}
        - key: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerStatsForMatch:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: object
          x-go-name: Stats
      example:
        stats:
          key: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerStatsForMatchesList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/PlayerStatsForMatch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - stats:
            key: {}
        - stats:
            key: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    PlayerStatsSimple:
      type: object
      properties:
        nickname:
          type: object
          x-go-name: Nickname
        player_id:
          type: object
          x-go-name: PlayerID
        player_stats:
          type: object
          additionalProperties:
            type: object
          x-go-name: PlayerStats
      example:
        player_id: {}
        player_stats:
          key: {}
        nickname: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    Plugin:
      required:
      - Config
      - Enabled
      - Name
      - Settings
      type: object
      properties:
        Config:
          $ref: '#/components/schemas/PluginConfig'
        Enabled:
          type: boolean
          description: "True if the plugin is running. False if the plugin is not\
            \ running, only installed."
        Id:
          type: string
          description: Id
          x-go-name: ID
        Name:
          type: string
          description: name
        PluginReference:
          type: string
          description: plugin remote reference used to push/pull the plugin
        Settings:
          $ref: '#/components/schemas/PluginSettings'
      description: Plugin A plugin for the Engine API
      x-go-package: github.com/docker/docker/api/types
    PluginConfig:
      title: PluginConfig The config of a plugin.
      required:
      - Args
      - Description
      - Documentation
      - Entrypoint
      - Env
      - Interface
      - IpcHost
      - Linux
      - Mounts
      - Network
      - PidHost
      - PropagatedMount
      - WorkDir
      type: object
      properties:
        Args:
          $ref: '#/components/schemas/PluginConfigArgs'
        Description:
          type: string
          description: description
        DockerVersion:
          type: string
          description: Docker Version used to create the plugin
        Documentation:
          type: string
          description: documentation
        Entrypoint:
          type: array
          description: entrypoint
          items:
            type: string
        Env:
          type: array
          description: env
          items:
            $ref: '#/components/schemas/PluginEnv'
        Interface:
          $ref: '#/components/schemas/PluginConfigInterface'
        IpcHost:
          type: boolean
          description: ipc host
        Linux:
          $ref: '#/components/schemas/PluginConfigLinux'
        Mounts:
          type: array
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
        Network:
          $ref: '#/components/schemas/PluginConfigNetwork'
        PidHost:
          type: boolean
          description: pid host
        PropagatedMount:
          type: string
          description: propagated mount
        User:
          $ref: '#/components/schemas/PluginConfigUser'
        WorkDir:
          type: string
          description: work dir
        rootfs:
          $ref: '#/components/schemas/PluginConfigRootfs'
      x-go-package: github.com/docker/docker/api/types
    PluginConfigArgs:
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Settable:
          type: array
          description: settable
          items:
            type: string
        Value:
          type: array
          description: value
          items:
            type: string
      description: PluginConfigArgs plugin config args
      x-go-package: github.com/docker/docker/api/types
    PluginConfigInterface:
      required:
      - Socket
      - Types
      type: object
      properties:
        ProtocolScheme:
          type: string
          description: Protocol to use for clients connecting to the plugin.
        Socket:
          type: string
          description: socket
        Types:
          type: array
          description: types
          items:
            $ref: '#/components/schemas/PluginInterfaceType'
      description: PluginConfigInterface The interface between Docker and the plugin
      x-go-package: github.com/docker/docker/api/types
    PluginConfigLinux:
      required:
      - AllowAllDevices
      - Capabilities
      - Devices
      type: object
      properties:
        AllowAllDevices:
          type: boolean
          description: allow all devices
        Capabilities:
          type: array
          description: capabilities
          items:
            type: string
        Devices:
          type: array
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
      description: PluginConfigLinux plugin config linux
      x-go-package: github.com/docker/docker/api/types
    PluginConfigNetwork:
      required:
      - Type
      type: object
      properties:
        Type:
          type: string
          description: type
      description: PluginConfigNetwork plugin config network
      x-go-package: github.com/docker/docker/api/types
    PluginConfigRootfs:
      type: object
      properties:
        diff_ids:
          type: array
          description: diff ids
          items:
            type: string
          x-go-name: DiffIds
        type:
          type: string
          description: type
          x-go-name: Type
      description: PluginConfigRootfs plugin config rootfs
      x-go-package: github.com/docker/docker/api/types
    PluginConfigUser:
      type: object
      properties:
        GID:
          type: integer
          description: g ID
          format: uint32
        UID:
          type: integer
          description: UID
          format: uint32
      description: PluginConfigUser plugin config user
      x-go-package: github.com/docker/docker/api/types
    PluginDevice:
      required:
      - Description
      - Name
      - Path
      - Settable
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Path:
          type: string
          description: path
        Settable:
          type: array
          description: settable
          items:
            type: string
      description: PluginDevice plugin device
      x-go-package: github.com/docker/docker/api/types
    PluginEnv:
      required:
      - Description
      - Name
      - Settable
      - Value
      type: object
      properties:
        Description:
          type: string
          description: description
        Name:
          type: string
          description: name
        Settable:
          type: array
          description: settable
          items:
            type: string
        Value:
          type: string
          description: value
      description: PluginEnv plugin env
      x-go-package: github.com/docker/docker/api/types
    PluginInterfaceType:
      required:
      - Capability
      - Prefix
      - Version
      type: object
      properties:
        Capability:
          type: string
          description: capability
        Prefix:
          type: string
          description: prefix
        Version:
          type: string
          description: version
      description: PluginInterfaceType plugin interface type
      x-go-package: github.com/docker/docker/api/types
    PluginMount:
      required:
      - Description
      - Destination
      - Name
      - Options
      - Settable
      - Source
      - Type
      type: object
      properties:
        Description:
          type: string
          description: description
        Destination:
          type: string
          description: destination
        Name:
          type: string
          description: name
        Options:
          type: array
          description: options
          items:
            type: string
        Settable:
          type: array
          description: settable
          items:
            type: string
        Source:
          type: string
          description: source
        Type:
          type: string
          description: type
      description: PluginMount plugin mount
      x-go-package: github.com/docker/docker/api/types
    PluginSettings:
      title: PluginSettings Settings that can be modified by users.
      required:
      - Args
      - Devices
      - Env
      - Mounts
      type: object
      properties:
        Args:
          type: array
          description: args
          items:
            type: string
        Devices:
          type: array
          description: devices
          items:
            $ref: '#/components/schemas/PluginDevice'
        Env:
          type: array
          description: env
          items:
            type: string
        Mounts:
          type: array
          description: mounts
          items:
            $ref: '#/components/schemas/PluginMount'
      x-go-package: github.com/docker/docker/api/types
    Port:
      required:
      - PrivatePort
      - Type
      type: object
      properties:
        IP:
          type: string
          description: Host IP address that the container's port is mapped to
        PrivatePort:
          type: integer
          description: Port on the container
          format: uint16
        PublicPort:
          type: integer
          description: Port exposed on the host
          format: uint16
        Type:
          type: string
          description: type
      description: Port An open port on a container
      x-go-package: github.com/docker/docker/api/types
    Prize:
      type: object
      properties:
        faceit_points:
          type: integer
          format: int64
          x-go-name: FaceitPoints
        rank:
          type: integer
          format: int64
          x-go-name: Rank
      example:
        rank: 7
        faceit_points: 4
      x-go-package: github.com/faceit/open-data-api/models/externals
    Promotion:
      title: Promotion Model
      type: object
      properties:
        points:
          type: integer
          description: Points needed for a player to get promoted.
          format: int64
          example: 10
          x-go-name: Points
      description: Promotion holds information about what is required in order for
        a player to be promoted to the next tier.
      example:
        points: 10
      x-go-package: github.com/faceit/open-data-api/models/externals
    PublishState:
      type: string
      description: |-
        PublishState represents the state of a Volume as it pertains to its
        use on a particular Node.
      x-go-package: github.com/docker/docker/api/types/volume
    PublishStatus:
      type: object
      properties:
        NodeID:
          type: string
          description: NodeID is the ID of the swarm node this Volume is published
            to.
        PublishContext:
          type: object
          additionalProperties:
            type: string
          description: |-
            PublishContext is the PublishContext returned by the CSI plugin when
            a volume is published.
        State:
          $ref: '#/components/schemas/PublishState'
      description: |-
        PublishStatus represents the status of the volume as published to an
        individual node
      x-go-package: github.com/docker/docker/api/types/volume
    Queue:
      type: object
      properties:
        adminTool:
          type: boolean
          x-go-name: AdminTool
        anticheatRequired:
          type: boolean
          x-go-name: AnticheatRequired
        calculateElo:
          type: boolean
          x-go-name: CalculateElo
        captainSelection:
          type: string
          x-go-name: CaptainSelection
        checkIn:
          $ref: '#/components/schemas/CheckIn'
        entityId:
          type: string
          x-go-name: EntityId
        entityType:
          type: string
          x-go-name: EntityType
        fbiManagement:
          type: boolean
          x-go-name: FbiManagement
        game:
          type: string
          x-go-name: Game
        groupSimilar:
          type: boolean
          x-go-name: GroupSimilar
        id:
          type: string
          x-go-name: Id
        joinType:
          $ref: '#/components/schemas/JoinType'
        lastModified:
          type: string
          format: date-time
          x-go-name: LastModified
        maxSkill:
          type: integer
          format: int64
          x-go-name: MaxSkill
        minSkill:
          type: integer
          format: int64
          x-go-name: MinSkill
        noOfPlayers:
          type: integer
          format: int64
          x-go-name: NoOfPlayers
        open:
          type: boolean
          x-go-name: Open
        organizerId:
          type: string
          x-go-name: OrganizerId
        paused:
          type: boolean
          x-go-name: Paused
        queueAlgorithm:
          $ref: '#/components/schemas/QueueAlgorithm'
        queueName:
          type: string
          x-go-name: QueueName
        region:
          type: string
          x-go-name: Region
        state:
          type: string
          x-go-name: State
        verifiedMatching:
          type: boolean
          x-go-name: VerifiedMatching
      example:
        verifiedMatching: true
        captainSelection: captainSelection
        game: game
        paused: true
        entityType: entityType
        maxSkill: 1
        adminTool: true
        entityId: entityId
        calculateElo: true
        anticheatRequired: true
        checkIn:
          time: 0
        organizerId: organizerId
        queueName: queueName
        joinType:
          maxParty: 6
          solo: true
          premade: true
          party: true
        minSkill: 5
        groupSimilar: true
        noOfPlayers: 5
        fbiManagement: true
        id: id
        lastModified: 2000-01-23T04:56:07.000+00:00
        state: state
        region: region
        open: true
        queueAlgorithm:
          roleBasedCaptainPick: true
          geoLabel:
            en: en
            fr: fr
          geoDescription:
            en: en
            fr: fr
          algorithmInput:
          - algorithmInput
          - algorithmInput
          algorithmParameters:
            band:
              value: 2
          id: id
          algorithmId: algorithmId
      x-go-package: github.com/faceit/open-data-api/models/externals
    QueueAlgorithm:
      type: object
      properties:
        algorithmId:
          type: string
          x-go-name: AlgorithmId
        algorithmInput:
          type: array
          items:
            type: string
          x-go-name: AlgorithmInput
        algorithmParameters:
          $ref: '#/components/schemas/AlgorithmParameters'
        geoDescription:
          $ref: '#/components/schemas/GeoDescription'
        geoLabel:
          $ref: '#/components/schemas/GeoLabel'
        id:
          type: string
          x-go-name: Id
        roleBasedCaptainPick:
          type: boolean
          x-go-name: RoleBasedCaptainPick
      example:
        roleBasedCaptainPick: true
        geoLabel:
          en: en
          fr: fr
        geoDescription:
          en: en
          fr: fr
        algorithmInput:
        - algorithmInput
        - algorithmInput
        algorithmParameters:
          band:
            value: 2
        id: id
        algorithmId: algorithmId
      x-go-package: github.com/faceit/open-data-api/models/externals
    QueueBan:
      type: object
      properties:
        banEnd:
          type: string
          format: date-time
          x-go-name: BanEnd
        banId:
          type: string
          x-go-name: Id
        banStart:
          type: string
          format: date-time
          x-go-name: BanStart
        createdAt:
          type: string
          format: date-time
          x-go-name: CreatedAt
        entityId:
          type: string
          x-go-name: EntityId
        entityType:
          type: string
          x-go-name: EntityType
        expired:
          type: boolean
          x-go-name: Expired
        lastModified:
          type: string
          format: date-time
          x-go-name: LastModified
        nickname:
          type: string
          x-go-name: Nickname
        organizerId:
          type: string
          x-go-name: OrganizerId
        queueId:
          type: string
          x-go-name: QueueId
        reason:
          type: string
          x-go-name: Reason
        type:
          type: string
          x-go-name: Type
        userId:
          type: string
          x-go-name: UserId
        version:
          type: integer
          format: int64
          x-go-name: Version
      example:
        queueId: queueId
        reason: reason
        entityType: entityType
        banEnd: 2000-01-23T04:56:07.000+00:00
        entityId: entityId
        type: type
        userId: userId
        version: 6
        createdAt: 2000-01-23T04:56:07.000+00:00
        expired: true
        organizerId: organizerId
        banId: banId
        nickname: nickname
        lastModified: 2000-01-23T04:56:07.000+00:00
        banStart: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/faceit/open-data-api/models/externals
    QueueBansList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/QueueBan'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        items:
        - queueId: queueId
          reason: reason
          entityType: entityType
          banEnd: 2000-01-23T04:56:07.000+00:00
          entityId: entityId
          type: type
          userId: userId
          version: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          organizerId: organizerId
          banId: banId
          nickname: nickname
          lastModified: 2000-01-23T04:56:07.000+00:00
          banStart: 2000-01-23T04:56:07.000+00:00
        - queueId: queueId
          reason: reason
          entityType: entityType
          banEnd: 2000-01-23T04:56:07.000+00:00
          entityId: entityId
          type: type
          userId: userId
          version: 6
          createdAt: 2000-01-23T04:56:07.000+00:00
          expired: true
          organizerId: organizerId
          banId: banId
          nickname: nickname
          lastModified: 2000-01-23T04:56:07.000+00:00
          banStart: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/faceit/open-data-api/models/externals
    QueueSimple:
      type: object
      properties:
        entityId:
          type: string
          x-go-name: EntityId
        entityType:
          type: string
          x-go-name: EntityType
        game:
          type: string
          x-go-name: Game
        id:
          type: string
          x-go-name: Id
        lastModified:
          type: string
          format: date-time
          x-go-name: LastModified
        open:
          type: boolean
          x-go-name: Open
        organizerId:
          type: string
          x-go-name: OrganizerId
        queueName:
          type: string
          x-go-name: QueueName
        region:
          type: string
          x-go-name: Region
        state:
          type: string
          x-go-name: State
      example:
        game: game
        organizerId: organizerId
        queueName: queueName
        entityType: entityType
        entityId: entityId
        id: id
        lastModified: 2000-01-23T04:56:07.000+00:00
        state: state
        region: region
        open: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    QueuesList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/QueueSimple'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - game: game
          organizerId: organizerId
          queueName: queueName
          entityType: entityType
          entityId: entityId
          id: id
          lastModified: 2000-01-23T04:56:07.000+00:00
          state: state
          region: region
          open: true
        - game: game
          organizerId: organizerId
          queueName: queueName
          entityType: entityType
          entityId: entityId
          id: id
          lastModified: 2000-01-23T04:56:07.000+00:00
          state: state
          region: region
          open: true
      x-go-package: github.com/faceit/open-data-api/models/externals
    Ranking:
      type: object
      properties:
        current_streak:
          type: integer
          format: int64
          x-go-name: CurrentStreak
        draw:
          type: integer
          format: int64
          x-go-name: Draw
        lost:
          type: integer
          format: int64
          x-go-name: Lost
        played:
          type: integer
          format: int64
          x-go-name: Played
        player:
          $ref: '#/components/schemas/UserSimple'
        points:
          type: integer
          format: int64
          x-go-name: Points
        position:
          type: integer
          format: int64
          x-go-name: Position
        win_rate:
          type: number
          format: double
          x-go-name: WinRate
        won:
          type: integer
          format: int64
          x-go-name: Won
      example:
        lost: 5
        won: 3
        draw: 1
        position: 7
        win_rate: 9.301444243932576
        current_streak: 6
        played: 5
        player:
          country: GB
          user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          nickname: nickname
          skill_level: 1
          avatar: https://avatar.jpg
          membership_type: membership_type
          memberships:
          - free
          - unlimited
          faceit_url: faceit_url
        points: 2
      x-go-package: github.com/faceit/open-data-api/models/externals
    Relegation:
      title: Relegation Model
      type: object
      properties:
        consecutive_losses:
          type: integer
          description: Consecutive losses needed for a player to get relegated to
            the previous tier.
          format: int64
          example: 3
          x-go-name: ConsecutiveLosses
      description: Relegation holds information about what is required in order for
        a player to be relegated to the previous tier.
      example:
        consecutive_losses: 3
      x-go-package: github.com/faceit/open-data-api/models/externals
    Role:
      type: object
      properties:
        color:
          type: string
          x-go-name: Color
        name:
          type: string
          x-go-name: Name
        ranking:
          type: integer
          format: int64
          x-go-name: Ranking
        role_id:
          type: string
          x-go-name: ID
        visible_on_chat:
          type: boolean
          x-go-name: VisibleOnChat
      example:
        color: color
        role_id: role_id
        visible_on_chat: true
        name: name
        ranking: 6
      x-go-package: github.com/faceit/open-data-api/models/externals
    RolesList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 1
        end: 0
        items:
        - color: color
          role_id: role_id
          visible_on_chat: true
          name: name
          ranking: 6
        - color: color
          role_id: role_id
          visible_on_chat: true
          name: name
          ranking: 6
      x-go-package: github.com/faceit/open-data-api/models/externals
    Roster:
      type: object
      properties:
        anticheat_required:
          type: boolean
          x-go-name: AnticheatRequired
        avatar:
          type: string
          x-go-name: Avatar
        game_player_id:
          type: string
          x-go-name: GamePlayerID
        game_player_name:
          type: string
          x-go-name: GamePlayerName
        game_skill_level:
          type: integer
          format: int64
          x-go-name: GameSkillLevel
        membership:
          type: string
          x-go-name: Membership
        nickname:
          type: string
          x-go-name: Nickname
        player_id:
          type: string
          x-go-name: ID
      example:
        player_id: player_id
        game_player_id: game_player_id
        game_skill_level: 4
        nickname: nickname
        anticheat_required: true
        avatar: avatar
        membership: membership
        game_player_name: game_player_name
      x-go-package: github.com/faceit/open-data-api/models/externals
    RoundStats:
      type: object
      properties:
        best_of:
          type: object
          x-go-name: BestOf
        competition_id:
          type: object
          x-go-name: CompetitionID
        game_id:
          type: object
          x-go-name: GameID
        game_mode:
          type: object
          x-go-name: GameMode
        match_id:
          type: object
          x-go-name: MatchID
        match_round:
          type: object
          x-go-name: MatchRound
        played:
          type: object
          x-go-name: Played
        round_stats:
          type: object
          additionalProperties:
            type: object
          x-go-name: RoundStats
        teams:
          type: array
          items:
            $ref: '#/components/schemas/TeamStatsSimple'
          x-go-name: Teams
      example:
        round_stats:
          key: {}
        best_of: {}
        teams:
        - players:
          - player_id: {}
            player_stats:
              key: {}
            nickname: {}
          - player_id: {}
            player_stats:
              key: {}
            nickname: {}
          team_stats:
            key: {}
          team_id: {}
          premade: {}
        - players:
          - player_id: {}
            player_stats:
              key: {}
            nickname: {}
          - player_id: {}
            player_stats:
              key: {}
            nickname: {}
          team_stats:
            key: {}
          team_id: {}
          premade: {}
        competition_id: {}
        match_id: {}
        game_mode: {}
        match_round: {}
        played: {}
        game_id: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    Rules:
      type: object
      properties:
        body:
          type: string
          x-go-name: Body
        game:
          type: string
          x-go-name: Game
        name:
          type: string
          x-go-name: Name
        organizer:
          type: string
          x-go-name: Organizer
        rule_id:
          type: string
          x-go-name: ID
      example:
        rule_id: rule_id
        game: game
        organizer: organizer
        name: name
        body: body
      x-go-package: github.com/faceit/open-data-api/models/externals
    Scope:
      type: string
      description: |-
        Scope defines the Scope of a Cluster Volume. This is how many nodes a
        Volume can be accessed simultaneously on.
      x-go-package: github.com/docker/docker/api/types/volume
    Season:
      title: Season Model
      type: object
      properties:
        end_date:
          type: string
          description: The end date of the season.
          format: date-time
          x-go-name: EndDate
        number:
          type: integer
          description: The season number.
          format: int64
          x-go-name: Number
        placement_match_count:
          type: integer
          description: The placement match mount.
          format: int64
          x-go-name: PlacementMatchCount
        start_date:
          type: string
          description: The start date of the season.
          format: date-time
          x-go-name: StartDate
      description: "Season holds information about a league season. When no older\
        \ season is requested, this field holds information about the season of the\
        \ league."
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        number: 7
        placement_match_count: 9
        start_date: 2000-01-23T04:56:07.000+00:00
      x-go-package: github.com/faceit/open-data-api/models/externals
    SeasonDetailed:
      type: object
      properties:
        divisions:
          type: array
          description: The divisions of the given season.
          items:
            $ref: '#/components/schemas/Division'
          x-go-name: Divisions
        season:
          $ref: '#/components/schemas/Season'
      example:
        season:
          end_date: 2000-01-23T04:56:07.000+00:00
          number: 7
          placement_match_count: 9
          start_date: 2000-01-23T04:56:07.000+00:00
        divisions:
        - tiers:
          - points_target: 5
            name: name
            rank: 1
          - points_target: 5
            name: name
            rank: 1
          assets:
            image: image
            color: color
            icon: icon
          leaderboard_config:
            relegation:
              consecutive_losses: 3
            max_players: 0
            points_per_win: 10
            starting_points: 6
            points_per_loss: -2
            promotion:
              points: 10
          min_elo: 5
          max_elo: 1
          name: name
          leaderboards:
          - leaderboards
          - leaderboards
          config_type: config_type
          type: type
        - tiers:
          - points_target: 5
            name: name
            rank: 1
          - points_target: 5
            name: name
            rank: 1
          assets:
            image: image
            color: color
            icon: icon
          leaderboard_config:
            relegation:
              consecutive_losses: 3
            max_players: 0
            points_per_win: 10
            starting_points: 6
            points_per_loss: -2
            promotion:
              points: 10
          min_elo: 5
          max_elo: 1
          name: name
          leaderboards:
          - leaderboards
          - leaderboards
          config_type: config_type
          type: type
      x-go-package: github.com/faceit/open-data-api/models/externals
    Secret:
      type: object
      properties:
        Key:
          type: string
          description: Key is the name of the key of the key-value pair passed to
            the plugin.
        Secret:
          type: string
          description: |-
            Secret is the swarm Secret object from which to read data. This can be a
            Secret name or ID. The Secret data is retrieved by Swarm and used as the
            value of the key-value pair passed to the plugin.
      description: |-
        Secret represents a Swarm Secret value that must be passed to the CSI
        storage plugin when operating on this Volume. It represents one key-value
        pair of possibly many.
      x-go-package: github.com/docker/docker/api/types/volume
    ServiceCreateResponse:
      type: object
      properties:
        ID:
          type: string
          description: The ID of the created service.
        Warnings:
          type: array
          description: |-
            Optional warning message.

            FIXME(thaJeztah): this should have "omitempty" in the generated type.
          items:
            type: string
      description: |-
        ServiceCreateResponse contains the information returned to a client on the
        creation of a new service.
      x-go-package: github.com/docker/docker/api/types/swarm
    ServiceUpdateResponse:
      type: object
      properties:
        Warnings:
          type: array
          description: Optional warning messages
          items:
            type: string
      description: ServiceUpdateResponse service update response
      x-go-package: github.com/docker/docker/api/types/swarm
    SharingMode:
      type: string
      description: |-
        SharingMode defines the Sharing of a Cluster Volume. This is how Tasks using a
        Volume at the same time can use it.
      x-go-package: github.com/docker/docker/api/types/volume
    SpacePlayer:
      type: object
      properties:
        activated_at:
          type: string
          format: date-time
          x-go-name: ActivatedAt
        address:
          $ref: '#/components/schemas/Address'
        avatar:
          type: string
          x-go-name: Avatar
        birth_date:
          $ref: '#/components/schemas/BirthDate'
        country:
          type: string
          x-go-name: Country
        cover_featured_image:
          type: string
          description: "Deprecated: no more in use"
          x-go-name: CoverFeaturedImage
        cover_image:
          type: string
          x-go-name: CoverImage
        email:
          type: string
          x-go-name: Email
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        first_name:
          type: string
          x-go-name: FirstName
        friends_ids:
          type: array
          items:
            type: string
          x-go-name: FriendsIds
        games:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/GameDetail'
          x-go-name: Games
        infractions:
          type: object
          description: "Deprecated: no more in use"
          x-go-name: Infractions
        last_name:
          type: string
          x-go-name: LastName
        membership_type:
          type: string
          description: "Deprecated: use memberships instead"
          x-go-name: MembershipType
        memberships:
          type: array
          items:
            type: string
          x-go-name: Memberships
        new_steam_id:
          type: string
          x-go-name: NewSteamID
        nickname:
          type: string
          x-go-name: Nickname
        platforms:
          type: object
          additionalProperties:
            type: string
          x-go-name: Platforms
        player_id:
          type: string
          x-go-name: ID
        settings:
          $ref: '#/components/schemas/UserSettings'
        steam_id_64:
          type: string
          x-go-name: SteamID64
        steam_nickname:
          type: string
          x-go-name: SteamNickname
        verified:
          type: boolean
          x-go-name: Verified
      x-go-package: github.com/faceit/open-data-api/models/externals
    Stats:
      type: object
      properties:
        rating:
          type: integer
          format: int64
          x-go-name: Rating
        skillLevel:
          $ref: '#/components/schemas/Stats_skillLevel'
        winProbability:
          type: number
          format: double
          x-go-name: WinProbability
      example:
        winProbability: 6.84685269835264
        rating: 7
        skillLevel:
          average: 1
          range:
            min: 1
            max: 1
      x-go-package: github.com/faceit/open-data-api/models/externals
    StatsCompetitionPlayer:
      type: object
      properties:
        nickname:
          type: string
          x-go-name: Nickname
        player_id:
          type: string
          x-go-name: ID
        stats:
          type: object
          additionalProperties:
            type: object
          x-go-name: Stats
      example:
        player_id: player_id
        stats:
          key: {}
        nickname: nickname
      x-go-package: github.com/faceit/open-data-api/models/externals
    SubstitutionConfiguration:
      type: object
      properties:
        max_substitutes:
          type: integer
          format: int64
          x-go-name: MaxSubstitutes
        max_substitutions:
          type: integer
          format: int64
          x-go-name: MaxSubstitutions
      example:
        max_substitutes: 7
        max_substitutions: 1
      x-go-package: github.com/faceit/open-data-api/models/externals
    Summary:
      required:
      - Containers
      - Created
      - Id
      - Labels
      - ParentId
      - RepoDigests
      - RepoTags
      - SharedSize
      - Size
      type: object
      properties:
        Containers:
          type: integer
          description: |-
            Number of containers using this image. Includes both stopped and running
            containers.

            This size is not calculated by default, and depends on which API endpoint
            is used. `-1` indicates that the value has not been set / calculated.
          format: int64
        Created:
          type: integer
          description: |-
            Date and time at which the image was created as a Unix timestamp
            (number of seconds sinds EPOCH).
          format: int64
        Id:
          type: string
          description: |-
            ID is the content-addressable ID of an image.

            This identifier is a content-addressable digest calculated from the
            image's configuration (which includes the digests of layers used by
            the image).

            Note that this digest differs from the `RepoDigests` below, which
            holds digests of image manifests that reference the image.
          x-go-name: ID
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        ParentId:
          type: string
          description: |-
            ID of the parent image.

            Depending on how the image was created, this field may be empty and
            is only set for images that were built/created locally. This field
            is empty if the image was pulled from an image registry.
          x-go-name: ParentID
        RepoDigests:
          type: array
          description: |-
            List of content-addressable digests of locally available image manifests
            that the image is referenced from. Multiple manifests can refer to the
            same image.

            These digests are usually only available if the image was either pulled
            from a registry, or if the image was pushed to a registry, which is when
            the manifest is generated and its digest calculated.
          items:
            type: string
        RepoTags:
          type: array
          description: |-
            List of image names/tags in the local image cache that reference this
            image.

            Multiple image tags can refer to the same image, and this list may be
            empty if no tags reference the image, in which case the image is
            "untagged", in which case it can still be referenced by its ID.
          items:
            type: string
        SharedSize:
          type: integer
          description: |-
            Total size of image layers that are shared between this image and other
            images.

            This size is not calculated by default. `-1` indicates that the value
            has not been set / calculated.
          format: int64
        Size:
          type: integer
          description: Total size of the image including all layers it is composed
            of.
          format: int64
        VirtualSize:
          type: integer
          description: |-
            Total size of the image including all layers it is composed of.

            Deprecated: this field is omitted in API v1.44, but kept for backward compatibility. Use Size instead.
          format: int64
      description: Summary summary
      x-go-package: github.com/docker/docker/api/types/image
    Team:
      title: Team Model
      type: object
      properties:
        avatar:
          type: string
          description: The Avatar of a team
          example: https://avatar.jpg
          x-go-name: Avatar
        chat_room_id:
          type: string
          description: The ChatID of a team
          example: team-6204037c-30e6-408b-8aaa-dd8219860b4b
          x-go-name: ChatID
        cover_image:
          type: string
          description: The CoverImage of a team
          example: https://cover-image.jpg
          x-go-name: CoverImage
        description:
          type: string
          description: The Description of a team
          example: Some description
          x-go-name: Description
        facebook:
          type: string
          description: The Facebook of a team
          example: https://facebook/team
          x-go-name: Facebook
        faceit_url:
          type: string
          description: The FaceitUrl of a team
          example: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
          x-go-name: FaceitUrl
        game:
          type: string
          description: The Game of a team
          example: csgo
          x-go-name: Game
        leader:
          type: string
          description: The Leader of a team
          example: leader
          x-go-name: Leader
        members:
          type: array
          description: |-
            The Members of a team

            Can be empty if not supported
          items:
            $ref: '#/components/schemas/UserSimple'
          x-go-name: Members
        name:
          type: string
          description: The Name of a team
          example: name
          x-go-name: Name
        nickname:
          type: string
          description: The Nickname of a team
          example: nickname
          x-go-name: Nickname
        team_id:
          type: string
          description: The ID of a team
          example: 6204037c-30e6-408b-8aaa-dd8219860b4b
          x-go-name: ID
        team_type:
          type: string
          description: The TeamType of a team
          example: premade
          x-go-name: TeamType
        twitter:
          type: string
          description: The Twitter of a team
          example: https://twitter/team
          x-go-name: Twitter
        website:
          type: string
          description: The Website of a team
          example: https://team.website
          x-go-name: Website
        youtube:
          type: string
          description: The Youtube of a team
          example: https://youtube.com/team
          x-go-name: Youtube
      description: The Team holds information about a team.
      example:
        youtube: https://youtube.com/team
        leader: leader
        game: csgo
        website: https://team.website
        facebook: https://facebook/team
        description: Some description
        avatar: https://avatar.jpg
        team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
        faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
        twitter: https://twitter/team
        members:
        - country: GB
          user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          nickname: nickname
          skill_level: 1
          avatar: https://avatar.jpg
          membership_type: membership_type
          memberships:
          - free
          - unlimited
          faceit_url: faceit_url
        - country: GB
          user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          nickname: nickname
          skill_level: 1
          avatar: https://avatar.jpg
          membership_type: membership_type
          memberships:
          - free
          - unlimited
          faceit_url: faceit_url
        chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
        name: name
        nickname: nickname
        team_type: premade
        cover_image: https://cover-image.jpg
      x-go-package: github.com/faceit/open-data-api/models/externals
    TeamList:
      title: TeamList Model
      required:
      - items
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          description: The teams list.
          readOnly: true
          items:
            $ref: '#/components/schemas/Team'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      description: The TeamList holds teams information.
      example:
        start: 6
        end: 0
        items:
        - youtube: https://youtube.com/team
          leader: leader
          game: csgo
          website: https://team.website
          facebook: https://facebook/team
          description: Some description
          avatar: https://avatar.jpg
          team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
          twitter: https://twitter/team
          members:
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
          name: name
          nickname: nickname
          team_type: premade
          cover_image: https://cover-image.jpg
        - youtube: https://youtube.com/team
          leader: leader
          game: csgo
          website: https://team.website
          facebook: https://facebook/team
          description: Some description
          avatar: https://avatar.jpg
          team_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
          faceit_url: "https://www.faceit.com/{lang}/teams/6204037c-30e6-408b-8aaa-dd8219860b4b"
          twitter: https://twitter/team
          members:
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          - country: GB
            user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
            nickname: nickname
            skill_level: 1
            avatar: https://avatar.jpg
            membership_type: membership_type
            memberships:
            - free
            - unlimited
            faceit_url: faceit_url
          chat_room_id: team-6204037c-30e6-408b-8aaa-dd8219860b4b
          name: name
          nickname: nickname
          team_type: premade
          cover_image: https://cover-image.jpg
      x-go-package: github.com/faceit/open-data-api/models/externals
    TeamSearch:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        chat_room_id:
          type: string
          x-go-name: ChatID
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        game:
          type: string
          x-go-name: Game
        name:
          type: string
          x-go-name: Name
        team_id:
          type: string
          x-go-name: ID
        verified:
          type: boolean
          x-go-name: Verified
      example:
        game: game
        chat_room_id: chat_room_id
        name: name
        verified: true
        avatar: avatar
        team_id: team_id
        faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    TeamStats:
      type: object
      properties:
        game_id:
          type: string
          x-go-name: GameID
        lifetime:
          type: object
          additionalProperties:
            type: object
          x-go-name: Lifetime
        segments:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
          x-go-name: Segments
        team_id:
          type: string
          x-go-name: TeamID
      example:
        lifetime:
          key: {}
        team_id: team_id
        game_id: game_id
        segments:
        - key: {}
        - key: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    TeamStatsSimple:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/PlayerStatsSimple'
          x-go-name: Players
        premade:
          type: object
          x-go-name: Premade
        team_id:
          type: object
          x-go-name: TeamID
        team_stats:
          type: object
          additionalProperties:
            type: object
          x-go-name: TeamStats
      example:
        players:
        - player_id: {}
          player_stats:
            key: {}
          nickname: {}
        - player_id: {}
          player_stats:
            key: {}
          nickname: {}
        team_stats:
          key: {}
        team_id: {}
        premade: {}
      x-go-package: github.com/faceit/open-data-api/models/externals
    TeamsSearchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/TeamSearch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - game: game
          chat_room_id: chat_room_id
          name: name
          verified: true
          avatar: avatar
          team_id: team_id
          faceit_url: faceit_url
        - game: game
          chat_room_id: chat_room_id
          name: name
          verified: true
          avatar: avatar
          team_id: team_id
          faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    Tier:
      type: object
      properties:
        name:
          type: string
          description: The name of the tier
          x-go-name: Name
        points_target:
          type: integer
          description: The target points for the tier
          format: int64
          x-go-name: Points
        rank:
          type: integer
          description: The rank of the tier
          format: int64
          example: 1
          x-go-name: Rank
      example:
        points_target: 5
        name: name
        rank: 1
      x-go-package: github.com/faceit/open-data-api/models/externals
    Topology:
      title: Topology is a map of topological domains to topological segments.
      type: object
      properties:
        Segments:
          type: object
          additionalProperties:
            type: string
      description: |-
        This description is taken verbatim from the CSI Spec:

        A topological domain is a sub-division of a cluster, like "region",
        "zone", "rack", etc.
        A topological segment is a specific instance of a topological domain,
        like "zone3", "rack3", etc.
        For example {"com.company/zone": "Z1", "com.company/rack": "R3"}
        Valid keys have two segments: an OPTIONAL prefix and name, separated
        by a slash (/), for example: "com.company.example/zone".
        The key name segment is REQUIRED. The prefix is OPTIONAL.
        The key name MUST be 63 characters or less, begin and end with an
        alphanumeric character ([a-z0-9A-Z]), and contain only dashes (-),
        underscores (_), dots (.), or alphanumerics in between, for example
        "zone".
        The key prefix MUST be 63 characters or less, begin and end with a
        lower-case alphanumeric character ([a-z0-9]), contain only
        dashes (-), dots (.), or lower-case alphanumerics in between, and
        follow domain name notation format
        (https://tools.ietf.org/html/rfc1035#section-2.3.1).
        The key prefix SHOULD include the plugin's host company name and/or
        the plugin name, to minimize the possibility of collisions with keys
        from other plugins.
        If a key prefix is specified, it MUST be identical across all
        topology keys returned by the SP (across all RPCs).
        Keys MUST be case-insensitive. Meaning the keys "Zone" and "zone"
        MUST not both exist.
        Each value (topological segment) MUST contain 1 or more strings.
        Each string MUST be 63 characters or less and begin and end with an
        alphanumeric character with '-', '_', '.', or alphanumerics in
        between.
      x-go-package: github.com/docker/docker/api/types/volume
    TopologyRequirement:
      type: object
      properties:
        Preferred:
          type: array
          description: |-
            Preferred is a list of Topologies that the volume should attempt to be
            provisioned in.

            Taken from the CSI spec:

            Specifies the list of topologies the CO would prefer the volume to
            be provisioned in.

            This field is OPTIONAL. If TopologyRequirement is specified either
            requisite or preferred or both MUST be specified.

            An SP MUST attempt to make the provisioned volume available using
            the preferred topologies in order from first to last.

            If requisite is specified, all topologies in preferred list MUST
            also be present in the list of requisite topologies.

            If the SP is unable to make the provisioned volume available
            from any of the preferred topologies, the SP MAY choose a topology
            from the list of requisite topologies.
            If the list of requisite topologies is not specified, then the SP
            MAY choose from the list of all possible topologies.
            If the list of requisite topologies is specified and the SP is
            unable to make the provisioned volume available from any of the
            requisite topologies it MUST fail the CreateVolume call.

            Example 1:
            Given a volume should be accessible from a single zone, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            preferred =
            {"region": "R1", "zone": "Z3"}
            then the SP SHOULD first attempt to make the provisioned volume
            available from "zone" "Z3" in the "region" "R1" and fall back to
            "zone" "Z2" in the "region" "R1" if that is not possible.

            Example 2:
            Given a volume should be accessible from a single zone, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z5"}
            preferred =
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z2"}
            then the SP SHOULD first attempt to make the provisioned volume
            accessible from "zone" "Z4" in the "region" "R1" and fall back to
            "zone" "Z2" in the "region" "R1" if that is not possible. If that
            is not possible, the SP may choose between either the "zone"
            "Z3" or "Z5" in the "region" "R1".

            Example 3:
            Given a volume should be accessible from TWO zones (because an
            opaque parameter in CreateVolumeRequest, for example, specifies
            the volume is accessible from two zones, aka synchronously
            replicated), and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"},
            {"region": "R1", "zone": "Z5"}
            preferred =
            {"region": "R1", "zone": "Z5"},
            {"region": "R1", "zone": "Z3"}
            then the SP SHOULD first attempt to make the provisioned volume
            accessible from the combination of the two "zones" "Z5" and "Z3" in
            the "region" "R1". If that's not possible, it should fall back to
            a combination of "Z5" and other possibilities from the list of
            requisite. If that's not possible, it should fall back  to a
            combination of "Z3" and other possibilities from the list of
            requisite. If that's not possible, it should fall back  to a
            combination of other possibilities from the list of requisite.
          items:
            $ref: '#/components/schemas/Topology'
        Requisite:
          type: array
          description: |-
            Requisite specifies a list of Topologies, at least one of which the
            volume must be accessible from.

            Taken verbatim from the CSI Spec:

            Specifies the list of topologies the provisioned volume MUST be
            accessible from.
            This field is OPTIONAL. If TopologyRequirement is specified either
            requisite or preferred or both MUST be specified.

            If requisite is specified, the provisioned volume MUST be
            accessible from at least one of the requisite topologies.

            Given
            x = number of topologies provisioned volume is accessible from
            n = number of requisite topologies
            The CO MUST ensure n >= 1. The SP MUST ensure x >= 1
            If x==n, then the SP MUST make the provisioned volume available to
            all topologies from the list of requisite topologies. If it is
            unable to do so, the SP MUST fail the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and both "zone" "Z2" and "zone" "Z3".

            If x<n, then the SP SHALL choose x unique topologies from the list
            of requisite topologies. If it is unable to do so, the SP MUST fail
            the CreateVolume call.
            For example, if a volume should be accessible from a single zone,
            and requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"}
            then the SP may choose to make the provisioned volume available in
            either the "zone" "Z2" or the "zone" "Z3" in the "region" "R1".
            Similarly, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"},
            {"region": "R1", "zone": "Z3"},
            {"region": "R1", "zone": "Z4"}
            then the provisioned volume MUST be accessible from any combination
            of two unique topologies: e.g. "R1/Z2" and "R1/Z3", or "R1/Z2" and
            "R1/Z4", or "R1/Z3" and "R1/Z4".

            If x>n, then the SP MUST make the provisioned volume available from
            all topologies from the list of requisite topologies and MAY choose
            the remaining x-n unique topologies from the list of all possible
            topologies. If it is unable to do so, the SP MUST fail the
            CreateVolume call.
            For example, if a volume should be accessible from two zones, and
            requisite =
            {"region": "R1", "zone": "Z2"}
            then the provisioned volume MUST be accessible from the "region"
            "R1" and the "zone" "Z2" and the SP may select the second zone
            independently, e.g. "R1/Z4".
          items:
            $ref: '#/components/schemas/Topology'
      description: |-
        TopologyRequirement expresses the user's requirements for a volume's
        accessible topology.
      x-go-package: github.com/docker/docker/api/types/volume
    Tournament:
      type: object
      properties:
        anticheat_required:
          type: boolean
          x-go-name: AnticheatRequired
        best_of:
          type: object
          x-go-name: BestOf
        calculate_elo:
          type: boolean
          x-go-name: CalculateElo
        competition_id:
          type: string
          description: "DEPRECATED: use tournament_id instead"
          x-go-name: IDdep
        cover_image:
          type: string
          x-go-name: CoverImage
        custom:
          type: boolean
          x-go-name: Custom
        description:
          type: string
          x-go-name: Description
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        featured_image:
          type: string
          x-go-name: FeaturedImage
        game_data:
          $ref: '#/components/schemas/Game'
        game_id:
          type: string
          x-go-name: GameID
        invite_type:
          type: string
          x-go-name: InviteType
        match_type:
          type: string
          x-go-name: MatchType
        max_skill:
          type: integer
          format: int64
          x-go-name: MaxSkill
        membership_type:
          type: string
          x-go-name: MembershipType
        min_skill:
          type: integer
          format: int64
          x-go-name: MinSkill
        name:
          type: string
          x-go-name: Name
        number_of_players:
          type: integer
          format: int64
          x-go-name: NumberOfPlayers
        number_of_players_checkedin:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersCheckedIn
        number_of_players_joined:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersJoined
        number_of_players_participants:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersParticipants
        organizer_data:
          $ref: '#/components/schemas/Organizer'
        organizer_id:
          type: string
          x-go-name: OrganizerID
        prize_type:
          type: string
          x-go-name: PrizeType
        region:
          type: string
          x-go-name: Region
        rounds:
          type: array
          items:
            type: object
          x-go-name: Rounds
        rule:
          type: string
          x-go-name: Rule
        started_at:
          type: integer
          format: int64
          x-go-name: StartedAt
        status:
          type: string
          x-go-name: Status
        substitutes_allowed:
          type: integer
          format: int64
          x-go-name: SubstitutesAllowed
        substitutions_allowed:
          type: integer
          format: int64
          x-go-name: SubstitutionsAllowed
        team_size:
          type: integer
          format: int64
          x-go-name: TeamSize
        total_prize:
          type: object
          x-go-name: TotalPrize
        tournament_id:
          type: string
          x-go-name: ID
        voting:
          type: object
          x-go-name: Voting
        whitelist_countries:
          type: array
          items:
            type: string
          x-go-name: WhitelistCountries
      example:
        calculate_elo: true
        number_of_players_checkedin: 5
        description: description
        rule: rule
        voting: {}
        substitutions_allowed: 3
        substitutes_allowed: 9
        tournament_id: tournament_id
        invite_type: invite_type
        best_of: {}
        whitelist_countries:
        - whitelist_countries
        - whitelist_countries
        organizer_id: organizer_id
        match_type: match_type
        cover_image: cover_image
        membership_type: membership_type
        number_of_players_participants: 2
        game_id: game_id
        organizer_data:
          youtube: youtube
          website: website
          twitch: twitch
          facebook: facebook
          description: description
          avatar: avatar
          type: type
          faceit_url: faceit_url
          cover: cover
          twitter: twitter
          vk: vk
          followers_count: 2
          organizer_id: organizer_id
          name: name
        team_size: 2
        custom: true
        number_of_players: 1
        min_skill: 6
        featured_image: featured_image
        faceit_url: faceit_url
        game_data:
          short_label: short_label
          assets:
            cover: cover
            featured_img_s: featured_img_s
            flag_img_l: flag_img_l
            flag_img_m: flag_img_m
            featured_img_m: featured_img_m
            featured_img_l: featured_img_l
            flag_img_s: flag_img_s
            flag_img_icon: flag_img_icon
            landing_page: landing_page
          regions:
          - regions
          - regions
          long_label: long_label
          parent_game_id: parent_game_id
          game_id: game_id
          order: 2
          platforms:
          - platforms
          - platforms
        max_skill: 0
        competition_id: competition_id
        name: name
        started_at: 7
        anticheat_required: true
        number_of_players_joined: 5
        region: region
        total_prize: {}
        prize_type: prize_type
        rounds:
        - {}
        - {}
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    TournamentSimple:
      type: object
      properties:
        anticheat_required:
          type: boolean
          x-go-name: AnticheatRequired
        custom:
          type: boolean
          x-go-name: Custom
        faceit_url:
          type: string
          x-go-name: FaceitUrl
        featured_image:
          type: string
          x-go-name: FeaturedImage
        game_id:
          type: string
          x-go-name: GameID
        invite_type:
          type: string
          x-go-name: InviteType
        match_type:
          type: string
          x-go-name: MatchType
        max_skill:
          type: integer
          format: int64
          x-go-name: MaxSkill
        membership_type:
          type: string
          x-go-name: MembershipType
        min_skill:
          type: integer
          format: int64
          x-go-name: MinSkill
        name:
          type: string
          x-go-name: Name
        number_of_players:
          type: integer
          format: int64
          x-go-name: NumberOfPlayers
        number_of_players_checkedin:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersCheckedIn
        number_of_players_joined:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersJoined
        number_of_players_participants:
          type: integer
          format: int64
          x-go-name: NumberOfPlayersParticipants
        organizer_id:
          type: string
          x-go-name: OrganizerID
        prize_type:
          type: string
          x-go-name: PrizeType
        region:
          type: string
          x-go-name: Region
        started_at:
          type: integer
          format: int64
          x-go-name: StartedAt
        status:
          type: string
          x-go-name: Status
        subscriptions_count:
          type: integer
          format: int64
          x-go-name: SubscriptionsCount
        team_size:
          type: integer
          format: int64
          x-go-name: TeamSize
        total_prize:
          type: object
          x-go-name: TotalPrize
        tournament_id:
          type: string
          x-go-name: ID
        whitelist_countries:
          type: array
          items:
            type: string
          x-go-name: WhitelistCountries
      example:
        number_of_players_checkedin: 5
        tournament_id: tournament_id
        invite_type: invite_type
        whitelist_countries:
        - whitelist_countries
        - whitelist_countries
        organizer_id: organizer_id
        match_type: match_type
        membership_type: membership_type
        number_of_players_participants: 7
        game_id: game_id
        team_size: 2
        custom: true
        number_of_players: 5
        min_skill: 1
        featured_image: featured_image
        faceit_url: faceit_url
        max_skill: 6
        subscriptions_count: 3
        name: name
        started_at: 9
        anticheat_required: true
        number_of_players_joined: 2
        region: region
        total_prize: {}
        prize_type: prize_type
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    TournamentTeam:
      type: object
      properties:
        nickname:
          type: string
          x-go-name: Nickname
        skill_level:
          type: integer
          format: int64
          x-go-name: SkillLevel
        subs_done:
          type: integer
          format: int64
          x-go-name: SubsDone
        team_id:
          type: string
          x-go-name: ID
        team_leader:
          type: string
          x-go-name: TeamLeader
        team_type:
          type: string
          x-go-name: TeamType
      example:
        nickname: nickname
        skill_level: 0
        team_leader: team_leader
        team_type: team_type
        team_id: team_id
        subs_done: 6
      x-go-package: github.com/faceit/open-data-api/models/externals
    TournamentTeams:
      type: object
      properties:
        checked_in:
          type: array
          items:
            $ref: '#/components/schemas/TournamentTeam'
          x-go-name: CheckedIn
        finished:
          type: array
          items:
            $ref: '#/components/schemas/TournamentTeam'
          x-go-name: Finished
        joined:
          type: array
          items:
            $ref: '#/components/schemas/TournamentTeam'
          x-go-name: Joined
        started:
          type: array
          items:
            $ref: '#/components/schemas/TournamentTeam'
          x-go-name: Started
      example:
        checked_in:
        - nickname: nickname
          skill_level: 0
          team_leader: team_leader
          team_type: team_type
          team_id: team_id
          subs_done: 6
        - nickname: nickname
          skill_level: 0
          team_leader: team_leader
          team_type: team_type
          team_id: team_id
          subs_done: 6
        joined:
        - null
        - null
        finished:
        - null
        - null
        started:
        - null
        - null
      x-go-package: github.com/faceit/open-data-api/models/externals
    TournamentsList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/TournamentSimple'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 4
        end: 0
        items:
        - number_of_players_checkedin: 5
          tournament_id: tournament_id
          invite_type: invite_type
          whitelist_countries:
          - whitelist_countries
          - whitelist_countries
          organizer_id: organizer_id
          match_type: match_type
          membership_type: membership_type
          number_of_players_participants: 7
          game_id: game_id
          team_size: 2
          custom: true
          number_of_players: 5
          min_skill: 1
          featured_image: featured_image
          faceit_url: faceit_url
          max_skill: 6
          subscriptions_count: 3
          name: name
          started_at: 9
          anticheat_required: true
          number_of_players_joined: 2
          region: region
          total_prize: {}
          prize_type: prize_type
          status: status
        - number_of_players_checkedin: 5
          tournament_id: tournament_id
          invite_type: invite_type
          whitelist_countries:
          - whitelist_countries
          - whitelist_countries
          organizer_id: organizer_id
          match_type: match_type
          membership_type: membership_type
          number_of_players_participants: 7
          game_id: game_id
          team_size: 2
          custom: true
          number_of_players: 5
          min_skill: 1
          featured_image: featured_image
          faceit_url: faceit_url
          max_skill: 6
          subscriptions_count: 3
          name: name
          started_at: 9
          anticheat_required: true
          number_of_players_joined: 2
          region: region
          total_prize: {}
          prize_type: prize_type
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    TypeBlock:
      title: TypeBlock defines options for using a volume as a block-type volume.
      type: object
      description: Intentionally empty.
      x-go-package: github.com/docker/docker/api/types/volume
    TypeMount:
      type: object
      properties:
        FsType:
          type: string
          description: FsType specifies the filesystem type for the mount volume.
            Optional.
        MountFlags:
          type: array
          description: MountFlags defines flags to pass when mounting the volume.
            Optional.
          items:
            type: string
      description: |-
        TypeMount contains options for using a volume as a Mount-type
        volume.
      x-go-package: github.com/docker/docker/api/types/volume
    UsageData:
      required:
      - RefCount
      - Size
      type: object
      properties:
        RefCount:
          type: integer
          description: |-
            The number of containers referencing this volume. This field
            is set to `-1` if the reference-count is not available.
          format: int64
        Size:
          type: integer
          description: |-
            Amount of disk space used by the volume (in bytes). This information
            is only available for volumes created with the `"local"` volume
            driver. For volumes created with other volume drivers, this field
            is set to `-1` ("not available")
          format: int64
      description: |-
        UsageData Usage details about the volume. This information is used by the
        `GET /system/df` endpoint, and omitted in other endpoints.
      x-go-package: github.com/docker/docker/api/types/volume
    UserSearch:
      type: object
      properties:
        avatar:
          type: string
          x-go-name: Avatar
        country:
          type: string
          x-go-name: Country
        games:
          type: array
          items:
            $ref: '#/components/schemas/GameUserSearch'
          x-go-name: Games
        nickname:
          type: string
          x-go-name: Nickname
        player_id:
          type: string
          x-go-name: ID
        status:
          type: string
          x-go-name: Status
        verified:
          type: boolean
          x-go-name: Verified
      example:
        country: country
        player_id: player_id
        games:
        - name: name
          skill_level: skill_level
        - name: name
          skill_level: skill_level
        nickname: nickname
        verified: true
        avatar: avatar
        status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    UserSettings:
      type: object
      properties:
        language:
          type: string
          x-go-name: Language
      example:
        language: language
      x-go-package: github.com/faceit/open-data-api/models/externals
    UserSimple:
      title: UserSimple Model
      type: object
      properties:
        avatar:
          type: string
          description: The Avatar of a user
          example: https://avatar.jpg
          x-go-name: Avatar
        country:
          type: string
          description: The Country of a user
          example: GB
          x-go-name: Country
        faceit_url:
          type: string
          description: The FaceitUrl of a user
          x-go-name: FaceitUrl
        membership_type:
          type: string
          description: "Deprecated: use memberships instead"
          x-go-name: MembershipType
        memberships:
          type: array
          description: The Memberships of a user
          example:
          - free
          - unlimited
          items:
            type: string
          x-go-name: Memberships
        nickname:
          type: string
          description: The Nickname of a user
          example: nickname
          x-go-name: Nickname
        skill_level:
          type: integer
          description: The SkillLevel of a user
          format: int64
          example: 1
          x-go-name: SkillLevel
        user_id:
          type: string
          description: The ID of a user
          example: 6204037c-30e6-408b-8aaa-dd8219860b4b
          x-go-name: ID
      description: The UserSimple holds information about a user.
      example:
        country: GB
        user_id: 6204037c-30e6-408b-8aaa-dd8219860b4b
        nickname: nickname
        skill_level: 1
        avatar: https://avatar.jpg
        membership_type: membership_type
        memberships:
        - free
        - unlimited
        faceit_url: faceit_url
      x-go-package: github.com/faceit/open-data-api/models/externals
    UsersSearchList:
      type: object
      properties:
        end:
          type: integer
          format: int64
          x-go-name: End
        items:
          type: array
          items:
            $ref: '#/components/schemas/UserSearch'
          x-go-name: Items
        start:
          type: integer
          format: int64
          x-go-name: Start
      example:
        start: 6
        end: 0
        items:
        - country: country
          player_id: player_id
          games:
          - name: name
            skill_level: skill_level
          - name: name
            skill_level: skill_level
          nickname: nickname
          verified: true
          avatar: avatar
          status: status
        - country: country
          player_id: player_id
          games:
          - name: name
            skill_level: skill_level
          - name: name
            skill_level: skill_level
          nickname: nickname
          verified: true
          avatar: avatar
          status: status
      x-go-package: github.com/faceit/open-data-api/models/externals
    Version:
      title: Version represents the internal object version.
      type: object
      properties:
        Index:
          type: integer
          format: uint64
      x-go-package: github.com/docker/docker/api/types/swarm
    Volume:
      required:
      - Driver
      - Labels
      - Mountpoint
      - Name
      - Options
      - Scope
      type: object
      properties:
        ClusterVolume:
          $ref: '#/components/schemas/ClusterVolume'
        CreatedAt:
          type: string
          description: Date/Time the volume was created.
        Driver:
          type: string
          description: Name of the volume driver used by the volume.
        Labels:
          type: object
          additionalProperties:
            type: string
          description: User-defined key/value metadata.
        Mountpoint:
          type: string
          description: Mount path of the volume on the host.
        Name:
          type: string
          description: Name of the volume.
        Options:
          type: object
          additionalProperties:
            type: string
          description: The driver specific options used when creating the volume.
        Scope:
          type: string
          description: |-
            The level at which the volume exists. Either `global` for cluster-wide,
            or `local` for machine level.
        Status:
          type: object
          additionalProperties:
            type: object
          description: |-
            Low-level details about the volume, provided by the volume driver.
            Details are returned as a map with key/value pairs:
            `{"key":"value","key2":"value2"}`.

            The `Status` field is optional, and is omitted if the volume driver
            does not support this feature.
        UsageData:
          $ref: '#/components/schemas/UsageData'
      description: Volume volume
      x-go-package: github.com/docker/docker/api/types/volume
    WaitExitError:
      type: object
      properties:
        Message:
          type: string
          description: Details of an error
      description: "WaitExitError container waiting error, if any"
      x-go-package: github.com/docker/docker/api/types/container
    WaitResponse:
      title: WaitResponse ContainerWaitResponse
      required:
      - StatusCode
      type: object
      properties:
        Error:
          $ref: '#/components/schemas/WaitExitError'
        StatusCode:
          type: integer
          description: Exit code of the container
          format: int64
      description: OK response to ContainerWait operation
      x-go-package: github.com/docker/docker/api/types/container
    Game_assets:
      type: object
      properties:
        cover:
          type: string
          x-go-name: Cover
        featured_img_l:
          type: string
          x-go-name: FeaturedImgL
        featured_img_m:
          type: string
          x-go-name: FeaturedImgM
        featured_img_s:
          type: string
          x-go-name: FeaturedImgS
        flag_img_icon:
          type: string
          x-go-name: FlagImgIcon
        flag_img_l:
          type: string
          x-go-name: FlagImgL
        flag_img_m:
          type: string
          x-go-name: FlagImgM
        flag_img_s:
          type: string
          x-go-name: FlagImgS
        landing_page:
          type: string
          x-go-name: LandingPage
      example:
        cover: cover
        featured_img_s: featured_img_s
        flag_img_l: flag_img_l
        flag_img_m: flag_img_m
        featured_img_m: featured_img_m
        featured_img_l: featured_img_l
        flag_img_s: flag_img_s
        flag_img_icon: flag_img_icon
        landing_page: landing_page
    Stats_skillLevel_range:
      type: object
      properties:
        max:
          type: integer
          format: int64
          x-go-name: Max
        min:
          type: integer
          format: int64
          x-go-name: Min
      example:
        min: 1
        max: 1
    Stats_skillLevel:
      type: object
      properties:
        average:
          type: integer
          format: int64
          x-go-name: Average
        range:
          $ref: '#/components/schemas/Stats_skillLevel_range'
      example:
        average: 1
        range:
          min: 1
          max: 1
  securitySchemes:
    key:
      type: apiKey
      description: API key Authorization
      name: Authorization
      in: header
x-original-swagger-version: "2.0"
